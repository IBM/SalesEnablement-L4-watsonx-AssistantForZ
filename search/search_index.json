{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#welcome","title":"Welcome","text":"<p>Welcome to the IBM watsonx Assistant for Z for Technical Sales Level 4 Lab Guide (lab guide). The lab guide is part of the IBM watsonx Assistant for Z for Technical Sales Level 4 learning plan for IBM and Business Partner Technical Sales and related badge. The learning plan is intended to teach technical sellers and Business Partners how to conduct a proof of experience (PoX) for a client. </p> <p>In a fast-paced world, things change...</p> <p>The products and services may appear differently than what is shown in the lab guide. This can occur if the product or service is updated with a new version.</p> <p>Responses generated by IBM watsonx Assistant for Z are likely to change over time. The responses you see when you run the queries in this section may differ from the screen images captured in the lab guide. </p> <p>Read and follow all the directions.</p> <p>It is important to read and follow all the documented steps. Skipping steps or sections can cause issues with completing the lab.</p> <p>Also, invest a few minutes in reading the tips in the Using the demonstration guide section. THe tips will save you time and frustration in completing the lab.</p> <p>This lab guide covers the setup, configuration, and usage of watsonx Assistant for Z. This lab guide uses the IBM watsonx Assistant for Z Velocity collection and the three Velocity Pilot lab environments in IBM Technology Zone (ITZ). </p> <p>The lab guide also enables dedicated lab environments for customized client PoXs and demonstrations. If you are preparing for an actual pilot engagement, refer to the Pilot Scoping Guide for watsonx Assistant for Z for additional information.</p> <p>Using the lab guide, you will learn how to:</p> <ul> <li>Provision the lab environments</li> <li>Create an assistant and configuring conversational search</li> <li>Configure assistant settings</li> <li>Test conversational search</li> <li>Deploy a dedicated instance of OpenSearch for client document ingestion (Optional)</li> <li>Import skills for z/OS automations</li> <li>Connect apps to assistants</li> <li>Create assistant actions</li> <li>Create skill flows </li> <li>Publish and deploy an assistant</li> </ul> <p>In addition, you will import pre-packaged z/OS skills and create custom-built skills to deliver an assistant that handles 3 use cases:</p> <ul> <li>Retrieving initial program load (IPL) information</li> <li>Managing certificates</li> <li>Resource Access Control Facility (RACF) administration support</li> </ul> <p>Not all capabilities of the offering are covered in the lab guide.</p> <p>This lab guide covers many features and capabilities of IBM Watson Assistant for Z, but not all. Some uncovered capabilities may be available in ITZ environments, while others may not, such as using skills for OMEGAMON.</p> <p></p>"},{"location":"#support","title":"Support","text":"<p>Think something is down? Check the applicable status pages for any known issues such as a site or service not being available:</p> <ul> <li>IBM Technology Zone status</li> </ul> <p>For issues with provisioning the ITZ environment for this lab (for example, a failed reservation request due to insufficient quota capacity), open a ticket with ITZ support:</p> <ul> <li> <p>Web:  IBM Technology Zone ticket system</p> </li> <li> <p>Email: techzone.help@ibm.com</p> </li> </ul> <p>For issues related to specific steps found in the demonstration guide after the ITZ environment is provisioned, contact the authors:</p> <ul> <li> <p>Slack: </p> </li> <li> <p>#watsonx-assistant-z-technical - IBM only</p> </li> <li> <p>#wxo-practitioners - IBM only - for questions that are related to the software as a service (SaaS) instance of watsonx Orchestrate</p> </li> <li> <p>Email: andrewj@us.ibm.com and maxwell.g.weiss@ibm.com</p> </li> </ul> <p>Business Partners, use the IBM Training live Chat Support service or other support methods that are found on the IBM Training portal here.</p>"},{"location":"#using-the-demonstration-guide","title":"Using the demonstration guide","text":"<p>Use these helpful tips to take full advantage of the IBM watsonx Assistant for Z for Technical Sales Level 4 Lab Guide.</p> Printing the demonstration guide <p>Printed or saved copies can be out of date</p> <p>The IBM watsonx Assistant for Z for Technical Sales Level 4 Lab Guide changes regularly to match the IBM watsonx Assistant for Z offering and associated ITZ environment. Printed or saved copies of the demonstration guide can become out-of-date quickly and result in failed steps. </p> <p>A ready-to-print PDF version of the IBM watsonx Assistant for Z for Technical Sales Level 4 Lab Guide is here. </p> <p></p> Create a reference card for storing user IDs, passwords, and links for your ITZ environments. <p>You will be creating and using multiple user IDs, passwords, links, and other content throughout the lab. To save time, it is strongly suggested you create a simple text file to store this data so it is readily available and you can easily cut and paste the data when needed.  Here is a template to get you started.</p> <pre><code>watsonx Assistant for Z - Level 4 shortcuts:\n\nwatsonx Orchestrate\n\n    IBM Cloud account: \n    IBM Cloud resources: https://cloud.ibm.com/resources\n    watsonx Orchestrate URL: \n\n    Assistant name: \n    Assistant description: \n    Assistant icon: https://ibm.github.io/SalesEnablement-L4-watsonx-AssistantForZ/Setup/_attachments/Zeeves75x75.png\n\nOpenShift\n\n    Cluster Admin Username: kubeadmin\n    Cluster Admin Password: \n    OCP Console: \n\n    IBM Cloud container entitlement key: \n\n    OS-secret password: \n    Client ingestion AuthKey: \n    Wrapper password: \n    Cluster domain for routes: \n    Ingestion route (append /v1/query): \n\nAnsible\n\n    Ansible Automation Platform URL: \n    AAP User Name: admin\n    AAP password:\n\n    Wazi User: IBMUSER\n    Wazi Password:\n    Wazi URL: \n\nLive Embed\n\n    inetegrationID:\n    region:\n    serviceInstanceID:\n</code></pre> Viewing images <p>Images in the demonstration guide can be enlarged by clicking on the image. Press the Esc key or click the X to dismiss the enlarged image.</p> <p></p> Image highlighting <p>In some images, the following styles of highlighting are used:</p> <ul> <li> <p>Solid highlight box: This style of box highlights where to click, enter, or select an item. </p> </li> <li> <p>Dash highlight box: This style of box highlights one of two things: the path to follow to get to a specific location in the user interface, or areas to explore on your own. </p> </li> </ul> Copying commands and prompts <p>Copying and pasting commands and prompts from this demonstration guide is easy and can eliminate typographical errors.</p> <p>Click the highlighted copy icon and then use your operating system's paste function. For example, Ctrl+V, or right-click and select <code>Paste</code>. </p> Acronyms and terminology <p>IBM employees and the tech industry in general, tend to use acronyms. In the demonstration guide, most acronyms will appear with a dashed underline. Hover over the acronym to learn its meaning. A question mark () icon will first appear and after a second the tool tip with the acronym's meaning is displayed. Try it here: LPAR. </p> <p></p> The Lab Guide table of contents <p>This Demonstration Guide uses a responsive browser-based interface to ensure pages are usable on various devices with different screen sizes. The Demonstration Guide table of contents may be displayed as highlighted in the green dashed box in this image:</p> <p></p> <p>However, if the browser window is sized smaller, the table of contents can be accessed by clicking the main menu icon ():</p> <p></p> <p>Click the main menu icon () to expand the table of contents.</p> <p>Continue to the Reserve the IBM Technology Zone environments section to begin the journey to obtain the IBM watsonx Assistant for Z Technical Sales Advanced badge.</p>"},{"location":"NextSteps/","title":"Next steps","text":""},{"location":"NextSteps/#next-steps","title":"Next steps","text":"<p>This lab guide covered many of the IBM watsonx Assistant for Z capabilities and provides a good base for conducting basic client pilots. However, there is still more to learn about IBM watsonx Assistant for Z. Updates and new releases of the offering and the underlying offerings like watsonx Orchestrate rollout regularly. Be sure to stay informed by bookmarking and regularly reviewing the offering landing page and the product documentation. </p>"},{"location":"NextSteps/#other-resources","title":"Other resources","text":"<p>The following resources are also available; however, not all are available to Business Partners:</p> <p>Slack channel: #watsonx-assistant-z-technical</p> <p>Wiki: Development team's wiki</p> <p>Box: wxa4z Q&amp;A - questions with high-quality responses.</p>"},{"location":"NextSteps/#earn-the-badge","title":"Earn the badge","text":"<p>Finally, remember to earn the IBM watsonx Assistant for Z Technical Sales Advanced you must complete the IBM watsonx Assistant for Z for Technical Sales Level 4 learning plan.</p> <p>IBM technical sellers: Your Learning learning plan</p> <p>Business Partners IBM Training learning plan</p>"},{"location":"TechZoneEnvironment/","title":"Reserve the IBM Technology Zone environment","text":""},{"location":"TechZoneEnvironment/#ibm-technology-zone-environment","title":"IBM Technology Zone environment","text":"<p>To enable sellers to learn how to deliver client pilots of IBM watsonx Assistant for Z, three environments are available in IBM Technology Zone (ITZ). The environments are part of the watsonx Assistant for Z Velocity lab collection and can be found in the IBM watsonx Assistant for Z collection.</p> <ul> <li> <p>Watsonx Assistant for Z lab \u2013 watsonx Orchestrate: provides a dedicated environment on IBM Cloud where you can create and configure the assistant, set up conversational search, import skills, and configure actions.</p> </li> <li> <p>Ansible Automation Platform (AAP) &amp; z/OS: provides a pre-configured instance of AAP and Wazi z/OS. This environment includes Ansible playbooks, which you can import as skills within watsonx Orchestrate and connect to your assistant. Preinstalled templates for various use cases are also available (covered in later sections). Learn more about AAP here. Learn more about Wazi, here.</p> </li> <li> <p>Single Node OpenShift with NFS storage: provisions a single-node Red Hat OpenShift cluster (SNO) on IBM Cloud. This cluster installs a dedicated instance of OpenSearch for Watson Assistant for Z, enabling ingestion of client-supplied documents.- </p> </li> </ul> <p>All activities in this lab guide are required.</p> <p>To earn the IBM Watsonx Assistant for Z Technical Sales Advanced badge and complete the Level 4 learning plan, you must provision all three ITZ environments and finish every section in the lab guide. Disregard any statements in the ITZ collection that suggest optional environments or tasks.</p> <p>Follow the instructions to create new reservation requests, extend the reservations, and access the ITZ demonstration environments. Provisioning the SNO environment in ITZ can take several hours, while the other two environments typically provisioning in under 30 minutes.</p>"},{"location":"TechZoneEnvironment/#create-a-reservation-request","title":"Create a reservation request","text":"<ol> <li> <p>Click each of the links that follow to open a browser to the reservation pages of the IBM watsonx Assistant for Z ITZ environments.</p> <p>You may be asked to authenticate to IBM Technology Zone.</p> <p>The steps to authenticate to ITZ are not detailed here as they may vary between users.</p> <p>Watsonx Assistant for Z lab \u2013 watsonx Orchestrate - reservation page</p> <p>Ansible Automation Platform (AAP) &amp; z/OS - reservation page</p> <p>Single Node OpenShift with NFS storage - reservation page</p> </li> </ol> <p>The next two steps are for one of the three environments. Repeat for all three environments.</p> <p>Follow the steps to create a reservation in ITZ for all three environments.</p> <ol> <li> <p>Select Reserve now.</p> <p>The Reserve now option creates a reservation for immediate use. Optionally, schedule the reservation for a later date, for example, when you are at your client's office to start a pilot.</p> <p></p> </li> <li> <p>Complete the reservation request form and then click Submit.</p> <p>The first two reservations are similar to the first image and have fields a-e that need to be completed.</p> <p>a. Name: specify a name for the reservation (optional).</p> <p>b. Purpose: select the Education purpose tile.</p> <p>For client pilots...</p> <p>For client pilots, set the Purpose field in the reservation to Pilot and provide an opportunity number to receive a longer reservation.</p> <p>c. Purpose description: enter a description, for example: Level 4 education.</p> <p>d. Preferred geography: select the region nearest to your physical location for improved performance and reduced network latency.</p> <p>e. End date and time: the initial maximum will be set to two days after the current date and time. Instructions follow to extend the reservation end date.</p> <p>f. Accept the IBM Technology Zone's terms and conditions and security policies.</p> <p>g. Click Submit.</p> <p></p> <p>In addition to the preceding fields, the reservation for the Single Node OpenShift with NFS storage has these additional fields:</p> <p>h. OCP/Kubernetes cluster network: leave the default setting of 10.128.0.0/14.</p> <p>i. Enable FIPS security: leave the default setting of No. Learn more about the Federal Information Processing Standards (FIPS) here.</p> <p>j. Master single node flavor: select 16 vCPU x 64 GB - 300 GB ephemeral storage.</p> <p>k. OpenShift version: select 4.14.</p> <p>l. OCP/Kubernetes service network: leave the default setting of 172.30.0.0/16.</p> <p>m. Accept the IBM Technology Zone's terms and conditions and security policies.</p> <p>n. Click Submit.</p> <p></p> </li> </ol> <p>During the provisioning process, multiple emails are sent to you from ITZ as the provisioning process runs. One email states the reservation is provisioning and the other email states that the environment is Ready.</p> <p>In rare cases, the provisioning process can fail. If you receive an email stating the reservation failed, try again by repeating Steps 1-3 for the environment that failed to provision. In addition, review the Troubleshooting section that follows. If issues continue, open an ITZ support ticket by using the methods that are mentioned in the Support section.</p>"},{"location":"TechZoneEnvironment/#extend-the-reservation","title":"Extend the reservation","text":"<p>When the reservations are in the Ready state, you can extend each reservation beyond its original end date. The duration of the extension will vary by reservation. </p> <ol> <li> <p>In the IBM Technology Zone portal, expand My TechZone and select My Reservations.</p> <p></p> </li> <li> <p>Click the overflow icon () on the reservation tile and select Extend.</p> <p></p> </li> </ol> <ol> <li> <p>Click the Select a date option, (a) specify the date to extend to, and then (b) click Extend.</p> <p></p> </li> </ol> <p>If you anticipate needing more time, repeat Steps 5-6 to extend the reservation to the maximum allowed. Repeat these steps for the other two reservations.</p>"},{"location":"TechZoneEnvironment/#join-the-itz-ibm-cloud-account","title":"Join the ITZ IBM Cloud account","text":"<p>Both the watsonx Assistant for Z lab \u2013 watsonx Orchestrate and the Ansible Automation Platform (AAP) &amp; z/OS environments add you to an IBM Cloud account while your reservation is active. During the provisioning process of these ITZ environments, you receive two emails from IBM Cloud. </p> <p>You only need to accept the invitation to the watsonx Assistant for Z lab \u2013 watsonx Orchestrate environment.</p> <ol> <li> <p>Open the email from IBM Cloud and click the Join now links.</p> <p></p> </li> <li> <p>In the Join IBM Cloud browser window that opens, select the I accept the product Terms and Conditions of the registration form, and then click Join Account.</p> <p></p> </li> </ol> <p>After joining the account, verify that the account appears in your available account list in the IBM Cloud portal.</p> <ol> <li> <p>Click the following link to open a browser to the IBM Cloud portal.</p> <p>IBM Cloud portal</p> </li> <li> <p>Follow the directions to complete the authentication to IBM Cloud using the same email address you used to login to ITZ. The login steps vary depending on any two-factor authentication methods enabled. </p> <p></p> </li> <li> <p>Click the account menu and verify access to the IBM Cloud account listed in your ITZ reservation.</p> <p>The account may be different.</p> <p>The account name should align with the account named in the invitation email you received. </p> <p></p> Does your IBM Cloud portal view look different? <p>If your IBM Cloud portal looks different from the images above, it could be because the IBM Cloud portal has gone through a design change, or your browser window is set to smaller size. Instead of the current selected account appearing in the top menu, you may see this change account icon: . Click this icon to view the list of accounts you can access.</p> <p></p> </li> </ol>"},{"location":"TechZoneEnvironment/#accessing-the-environments","title":"Accessing the environments","text":"<p>Each reservation provides access to its respective environment. Details for accessing each environment are provided in the Pilot setup sections that follow in the lab guide.</p> <p>After all three reservations are in the Ready state and you accept the invitations to the IBM Cloud accounts, proceed to the next section to complete the pilot setup.</p>"},{"location":"TechZoneEnvironment/#troubleshooting","title":"Troubleshooting","text":"If your reservation for the Single Node OpenShift environment fails... <p>If your reservation for the Single Node OpenShift environment fails, try selecting one of the eu-gb region options as the Preferred Geography. </p>"},{"location":"nav/","title":"Nav","text":"<ul> <li>Welcome</li> <li>Reserve the IBM Technology Zone environment</li> <li>Create an assistant and configure conversational search</li> <li>Bring your own search and documents<ul> <li>Create a stand-alone OpenSearch instance for document ingestion</li> <li>Install and use zassist to ingest client documents</li> </ul> </li> <li>Skills and skill flows<ul> <li>Get started with skills and actions</li> <li>Explore Ansible Automation Platform</li> <li>Import skills from Ansible Automation Platform</li> <li>Connect the app to the assistant</li> <li>Create actions for the assistant</li> <li>Create skill flows for the assistant</li> <li>Create custom-built actions</li> <li>Import pre-packaged z/OS skills</li> </ul> </li> <li>Publish and deploy your assistant</li> <li>Use cases<ul> <li>Retrieve IPL information</li> <li>SSL certificate renewal</li> <li>Challenge: RACF administration support</li> </ul> </li> <li>Other integrations</li> <li>Next steps</li> </ul>"},{"location":"otherIntegrations/","title":"Other integrations","text":""},{"location":"otherIntegrations/#adding-other-integrations","title":"Adding other integrations","text":"<p>IBM watsonx Assistant for Z can integrate with other delivery channels beyond a web page. Other channels include Slack, Microsoft teams, WhatsApp, and many others. Integrating with these and other channels are not covered in the lab guide. However, follow the steps to find the current channels that are supported and where to get more information.</p> <ol> <li> <p>Hover over the Home () and click Integrations.</p> <p></p> </li> <li> <p>Explore the Essential channels and Channels sections.</p> <p></p> </li> <li> <p>Click Add on the Slack tile.</p> <p></p> </li> <li> <p>Click Add.</p> <p></p> </li> <li> <p>Review the step-by-step instructions and additional information available for adding a Slack integration.</p> <p>Note: Most regular users do not have permissions to integrate with your enterprise slack deployment as doing so requires administrative rights.</p> <p></p> </li> </ol> <p>Take time to further explore the next steps for adding a Slack integration channel and the other supported integration channels.</p> <p>Learn more about adding integrations here.</p>"},{"location":"publishDeploy/","title":"Publish and deploy your assistant","text":""},{"location":"publishDeploy/#publishing-and-deploying-your-assistant","title":"Publishing and deploying your assistant","text":"<p>To this point, acting as an Assistant Builder, you built the assistant, configured conversational search, and added skills and automations. You tested your assistant by using the preview capability of AI Assistant Builder. The preview capability is a closed environment for experimenting with prompts.</p> <p>After your assistant is finalized, you can publish it to make it available to users. Each assistant that you create comes with two environments: draft and live. You configured your assistant in the draft environment. Each environment has its own set of IDs, URLs, and service credentials referenced by external services.</p> <p>The Environments page in the AI assistant builder has tabs for managing both the Draft environment and the Live environment:</p> <p></p> <p></p> <p>The Draft environment contains all your in-progress work in the Actions, Preview, and Publish pages. Use the Draft environment tab to build out your assistant and use for internal testing before deployment. Any integrations (channels) that you use for the Draft environment are unique to that environment, and changes to draft integrations don\u2019t affect the Live environment.</p>"},{"location":"publishDeploy/#publish-the-assistant","title":"Publish the assistant","text":"<p>Each time that you publish, you\u2019re creating a new version of the assistant, for example V1. When you publish your content, you\u2019re creating a snapshot of the draft content, resulting in a version.</p> <p>Versions do not contain integration configurations or environment settings</p> <p>Published versions contain all of the content from actions, including settings and variables. However, versions do not contain integration configurations or environment settings. Integration configurations and environment settings must be configured manually in each environment.</p> <p>For managing quality-control and versioning, the Live environment is the version of the assistant to give to users.</p> <p>Follow these steps to publish the first version of your assistant by using Assistant Builder:</p> <ol> <li> <p>Hover over the Home icon () and click Publish.</p> <p></p> </li> <li> <p>Click Publish.</p> <p></p> </li> <li> <p>Enter a description of the changes (a), set the environment to Live (b), and then click Publish (c).</p> <p></p> </li> </ol>"},{"location":"publishDeploy/#configure-the-live-environment","title":"Configure the live environment","text":"<p>Important: When the live environment is created, the settings from the draft environment are not carried over (for example, the configuration of the OpenSearch instance used for conversational search).</p> <ol> <li> <p>Hover over the Home icon () and click Environments.</p> <p></p> </li> <li> <p>Click Live.</p> <p></p> </li> <li> <p>Click Web chat.</p> <p></p> </li> <li> <p>Customize the live assistant as you see fit.</p> <p>On the Style tab, you\u2019re able to set the Assistant name that is displayed on the chat window when users are interacting with the assistant. For pilots or demos, consider personalizing this name for the client. Also in the Style tab, you can set the themes and display settings of the chat windows, including the ability to enable the IBM Watermark and enable streaming.</p> <p>On the Home tab, you enable and customize the greeting message from the assistant when the user accesses the assistant chat. You are also able to set Conversation starters that are displayed in the chat window. When selected by the user, the text of the conversation starter is sent as a prompt, so it is important that your assistant is trained and tested to answer correctly. It is highly recommended to remove the default conversation starters and create your own. The ability to add a Background style for the assistant chat window is on the home screen tab.</p> <p>Explore all the other tabs.</p> <p>Customize your live environment.</p> <p>For this lab, toggle Streaming on and turn Suggestions off on the Suggestions tab. You may also want to change the theme to Dark to differentiate your draft and live environments. </p> <p></p> </li> <li> <p>Click Save and exit.</p> <p></p> </li> <li> <p>Click Add in the Search tile.</p> <p></p> </li> <li> <p>Click Custom service.</p> <p></p> </li> <li> <p>Enter the URL for your bring-your-own-search (BYOS) engine (a), select Basic authentication for the authentication type (b), enter admin for the Username (c), enter the password that you specified in the <code>wrapper-creds.yaml</code> file for the Password (d), and then click Next (e).</p> <p>Use the correct URL and authentication type!</p> <p>Use the URL and credentials for your BYOS OpenSearch engine created earlier here.</p> <p></p> </li> <li> <p>Verify conversational search is enabled and click Save.</p> <p></p> </li> <li> <p>Update the Custom service settings (a-f), click Save (g), and then click Close (h).</p> <p>Customize the settings.</p> <p>This is your assistant. Feel free to customize the settings. The settings shown below reflect the changes made earlier in the lab guide to the draft version of the assistant. This includes the Metadata field to weigh ingested client documents higher using: </p> <pre><code>{\"doc_weight\":\n{\"product_docs\":0.2,\n\"customer_docs\":0.8},\n\"ibm_indices\":\"*_ibm_docs_slate,*_ibm_redbooks_slate\",\n\"standardize\":true,\n\"customer_indices\":\"customer_*\"\n}\n</code></pre> <p></p> </li> </ol>"},{"location":"publishDeploy/#connect-the-skills-to-the-live-environment","title":"Connect the skills to the live environment","text":"<ol> <li> <p>Click Skill sets in the main menu.</p> <p></p> </li> <li> <p>Select your assistant's live instance in the Skill sets list.</p> <p></p> </li> <li> <p>Click Connections.</p> <p></p> </li> <li> <p>Search for the application name you specified earlier.</p> <p></p> </li> <li> <p>Click the ellipses () for your app and then click Connect app.</p> <p></p> </li> <li> <p>Click Connect app.</p> <p></p> </li> <li> <p>Enter the username (a) and password (b) using the username (<code>admin</code>) and password for your IBM Technology Zone (ITZ) watsonx Assistant for Z Pilot - AAP &amp; z/OS reservation, and then click Connect app (c).</p> <p></p> <p>Learn more about publishing your assistant and creating live environments here.</p> </li> </ol>"},{"location":"publishDeploy/#deploy-the-assistant","title":"Deploy the assistant","text":"<p>After configuring your assistant\u2019s settings and publishing, the final step is to deploy your assistant, which can be done across various channels depending on the use case.</p> <p>Several options exist for deploying your assistant through channels and integrations to satisfy the use cases that you might encounter. Learn more about all the deployment options here.</p> <p>For this lab, deploy the assistant by using the web chat integration. The web chat integration provides an assistant interface that can integrate with a website. Learn more about the web chat integration here.</p> <ol> <li> <p>Open the Environments page in the AI assistant builder.</p> </li> <li> <p>Click Web chat for the Live environment.</p> <p></p> </li> <li> <p>Click the Embed tab.</p> <p></p> </li> <li> <p>Copy and record the <code>integrationID</code>, <code>region</code>, and <code>serviceInstanceID</code> values.</p> <p></p> </li> </ol> <ol> <li> <p>In a text editor, create a file that is named <code>Watson Assistant Chat.html</code> and paste the following text in the file.</p> <p>File name: </p><pre><code>Watson Assistant Chat.html\n</code></pre> <p>File contents: </p><pre><code>&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n&lt;title&gt;Watson Assistant Chat&lt;/title&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt;\n\n&lt;style&gt;\n  .WebChatContainer {\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n  }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n\n&lt;div class=\"WebChatContainer\"/&gt;\n\n&lt;script&gt;\nconst element = document.querySelector('.WebChatContainer');\n\nwindow.watsonAssistantChatOptions = {\n    integrationID: \"&lt;YOUR INTEGRATION ID&gt;\", // The ID of this integration.\n    region: \"&lt;YOUR REGION&gt;\", // The region your integration is hosted in.\n    serviceInstanceID: \"&lt;YOUR SERVICE INSTANCE ID&gt;\", // The ID of your service instance.\n    element,\n\n    openChatByDefault: true,\n    hideCloseButton: true,\n\n    layout: {\n      showFrame: false,\n      hasContentMaxWidth: true,\n    },\n\n    onLoad: async (instance) =&gt; {\n      window.WACInstance = instance;\n      await instance.render();\n    }\n};\n\nsetTimeout(function() {\n    const t = document.createElement('script');\n    t.src = 'https://web-chat.global.assistant.test.watson.appdomain.cloud/versions/' + (window.watsonAssistantChatOptions.clientVersion || 'latest') + '/WatsonAssistantChatEntry.js';\n    document.head.appendChild(t);\n});\n&lt;/script&gt;\n\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p>Before modification: </p> <p>After modification: </p> </li> <li> <p>Open the <code>Watson Assistant Chat.html</code> file in a web browser.</p> <p></p> </li> </ol> <p>Your assistant is now live. Explore some of the earlier prompts to verify that the assistant is accessing the ingested documents and your skills and skill flows are active.</p> <p>Wait 5-10 seconds before clicking apply on skill actions.</p> <p>Prompts to try: </p><pre><code>What is z/OS continuous delivery?\n</code></pre> <pre><code>Get z/OS facts\n</code></pre> <pre><code>Show me z/OS facts\n</code></pre> <pre><code>Gather and display z/OS facts\n</code></pre>"},{"location":"Setup/creatingAssistant-configuringConvoSearch/","title":"Create an assistant and configure conversational search","text":""},{"location":"Setup/creatingAssistant-configuringConvoSearch/#creating-an-assistant-and-configuring-conversational-search","title":"Creating an assistant and configuring conversational search","text":"<p>Watsonx Orchestrate allows you to create and configure an assistant with conversational search capabilities. Configure your assistant to use conversational search by using a hosted OpenSearch instance. The pre-configured instance of watsonx Orchestrate in IBM Technology Zone (ITZ) boasts over 220 knowledge sources and supports Retrieval Augmented Generation (RAG). The large language model (LLM) providing conversational AI augments this knowledge based on IBM Z documentation, generating IBM Z context-aware responses to queries with content-grounded knowledge.</p> <p>A high-level, logical architecture of the environment is illustrated in the following diagram.</p> <p></p>"},{"location":"Setup/creatingAssistant-configuringConvoSearch/#access-the-itz-ibm-cloud-account-for-the-watsonx-assistant-for-z-pilot-environment","title":"Access the ITZ IBM Cloud account for the watsonx Assistant for Z Pilot environment","text":"<ol> <li> <p>In the IBM Technology Zone portal, expand My TechZone and select My Reservations, or click the following link.</p> <p>ITZ My reservations</p> <p></p> </li> <li> <p>Click the watsonx Assistant for Z Pilot - watsonx Orchestrate tile.</p> <p></p> </li> <li> <p>Record the ITZ IBM Cloud account name associated with the reservation.</p> <p>Did you read the tip on the welcome page about creating a reference card? Check it out here.</p> <p></p> </li> <li> <p>Click the IBM Cloud Login link.</p> <p></p> <p>Steps to authenticate to IBM Cloud are not illustrated here.</p> <p>You may need to authenticate to IBM Cloud after clicking the link. These steps are not shown here as they may vary by individual.</p> </li> <li> <p>Verify that the current IBM Cloud account is the same as the account name recorded in step 3. If the account is not the same, switch to the proper account.</p> <p>Note: The formatting of the name can appear differently than what is shown in the ITZ reservation.</p> <p></p> <p>If the proper account is not listed, click the account drop down and select the proper account. </p> <p>Note: If your browser window is narrow, the account drop down can be depicted with the Switch Account icon ().</p> <p></p> </li> </ol>"},{"location":"Setup/creatingAssistant-configuringConvoSearch/#create-your-assistant","title":"Create your Assistant","text":"<ol> <li> <p>Click the Resources icon ().</p> <p></p> </li> <li> <p>Expand the AI / Machine Learning section and click the watsonx Orchestrate instance listed (the instance name is different than shown in the following image).</p> <p></p> </li> <li> <p>Click Launch watsonx Orchestrate.</p> <p></p> </li> <li> <p>Click the AI assistant builder tile to start creating a new assistant.</p> <p></p> </li> <li> <p>Enter a name and optional description for your assistant and click Next.</p> <p></p> </li> <li> <p>Complete the Personalize your assistant form and click Next.</p> <p>Explore the personalization options. In creating an assistant for a client pilot, consider specifying attributes that align with the client's business.</p> <p>a. Select Web.</p> <p>b. Select the industry of your choice.</p> <p>c. Select the role of your choice.</p> <p>d. Select the need of your choice.</p> <p></p> </li> <li> <p>Complete the Customize your chat UI form and click Next.</p> <p>Explore the customization options. When creating an assistant for a client pilot, consider specifying attributes that align with the client (for example, colors and logos).</p> <p></p> </li> <li> <p>Preview your assistant and then click Create.</p> <p></p> <p>The assistant is now created.</p> <p></p> </li> </ol> <p></p>"},{"location":"Setup/creatingAssistant-configuringConvoSearch/#configure-conversational-search","title":"Configure conversational search","text":"<p>In the next steps you will be to configure conversational search for your assistant that uses a hosted instance of OpenSearch.</p> <ol> <li> <p>Click Generative AI menu item () in the left navigation.</p> <p></p> </li> <li> <p>Select the base large language model (LLM) settings.</p> <p>If available, set the LLM model to granite-13b-chat-v2.</p> <p>Notice their are several LLM models available. The current recommendation is for pilots, to use the granite-13b-chat-v2 model as it provides the best results in recent testing. However, this model has been deprecated as of 2024-11-04 and will may not be available after 2025-01-19. Note: screen captures that follow show the granite-3-8b-instruct LLM as being selected.</p> <p></p> </li> <li> <p>Click Set up your Search Integration.</p> <p>By default, conversational search is not enabled when an assistant is created. Conversational search takes priority over general-purpose answering if both are enabled. Learn more about conversational search in watsonx here.</p> <p></p> </li> <li> <p>Click Custom service.</p> <p></p> </li> <li> <p>Complete the Custom service (a-e) form and then click Next (f).</p> <p>a. Select By providing credentials.</p> <p>b. Enter the following value in the URL field (use the copy icon to avoid typographical errors). This is the URL for the shared OpenSearch instance. In later sections, you create and customize a dedicated instance. </p><pre><code>https://wxa4z-opensearch-wrapper-wxa4z-demo-v2-1-0.wxo4z-opc-opensearch-clus-47e063e6a3ad1f71bf2e58f91c3b4c2e-0000.us-south.containers.appdomain.cloud/v1/query\n</code></pre> <p>c. Select Basic authentication in the Choose an authentication type drop-down list.</p> <p>d. Enter <code>admin</code> in the Username field.</p> <p>e. Enter <code>secureP@ssw0rd!</code> in the Password field.</p> <pre><code>secureP@ssw0rd!\n</code></pre> <p></p> </li> <li> <p>Enable conversational search and then click Save.</p> <p></p> </li> <li> <p>Update the conversational search custom service settings based on your requirements.</p> <p>Note: The Settings page is divided into two sections in the following images to enhance the visibility of the screen captures. </p> <p>Learn more about these custom service settings here.</p> <p>The following settings are proven to work well. You can experiment with these settings to see how they affect queries for your client's pilot.</p> <p>a. Enable Conversational search.</p> <p>b. Select Single turn. Multi-turn conversation (by selecting Entire conversation) is supported by the offering, but has not been fully included in the lab guide. See the callout in the Testing conversational search section below.</p> <p>c. Specify the text that appears to instruct the user to expand the list of citations in the assistant (except web chat client).</p> <p>d. Select Lowest for the retrieval confidence threshold setting. This setting checks the confidence of the retrieved citations before a response is generated.</p> <p>e. Select Verbose for the generated response length. This setting affects the average response length. Depending on user input, variations from the selected length can occur.</p> <p>f. Select Lowest for the response confidence threshold. This setting checks the confidence of the generated citations after the response is generated.</p> <p></p> <p>g. Keep the default setting of All for the listing of citations.</p> <p>h. Keep the Default filter field empty.</p> <p>i. The Metadata field provides a way to adjust your assistant\u2019s behavior during conversational search for your OpenSearch instance. This option is explored in detail in the Installing and using zassist to ingest client documents. Leave the field empty for now.</p> <p>j. The Search display text options specify the default text displayed when no results are found or when connectivity issues to the backend search service occur. You can keep the defaults or customize the service.</p> <p></p> </li> <li> <p>Click Save (a) and then click Close (b).</p> <p></p> </li> </ol>"},{"location":"Setup/creatingAssistant-configuringConvoSearch/#complete-the-configuration","title":"Complete the configuration","text":"<p>After you save and close the Conversational search configuration page, a few more configurations are needed to get the best experience from your conversational chat. Details on these settings are available here.</p> <ol> <li> <p>Hover over the Generative AI icon () in the left navigation and click Actions.</p> <p></p> </li> <li> <p>Click Set by assistant under the All items menu.</p> <p></p> </li> <li> <p>Click No matches.</p> <p></p> </li> <li> <p>Click Step 1 under Conversation steps.</p> <p></p> </li> <li> <p>Select without conditions (a) in the Is taken drop-down menu and then click Clear conditions (b).</p> <p>Note: the Is taken value does not change from with conditions after selecting without conditions.</p> <p></p> </li> <li> <p>Delete the default text in the Assistant says entry field.</p> <p></p> </li> <li> <p>Expand the And then drop-down menu and select Search for the answer.</p> <p></p> </li> <li> <p>Click Edit settings.</p> <p></p> </li> <li> <p>Click After generation.</p> <p></p> </li> <li> <p>Select End the action after this step and then click Apply.</p> <p></p> </li> <li> <p>Click Save ().</p> <p></p> </li> <li> <p>Select Step 2 (No matches count) under Conversation steps and click delete ().</p> <p></p> </li> <li> <p>Click Delete in the confirmation dialog to delete Conversation step 2.</p> <p></p> </li> <li> <p>Click Close (the x icon) the Editor window.</p> <p></p> </li> <li> <p>Click Fallback in the Actions table.</p> <p></p> </li> <li> <p>Delete all of the Conversation steps.</p> <p>Note: The following image is edited. Only five steps are shown, but all six need to be deleted. You need to select each step individually. Click delete () and confirm the deletion.</p> <p></p> </li> <li> <p>Verify that all Conversation steps are deleted and then click the x to close the Editor window.</p> <p></p> </li> <li> <p>Click the Global settings ().</p> <p></p> </li> <li> <p>Click No matches under the Conversation routing tab.</p> <p></p> </li> <li> <p>Move the slider to More often (or select More often in the drop-down).</p> <p>The setting helps ensure that actions are triggered less often unless the user\u2019s query specifically matches the action\u2019s input.</p> <p></p> </li> <li> <p>Click Autocorrection.</p> <p></p> </li> <li> <p>Click the autocorrection toggle to turn the feature Off.</p> <p></p> </li> <li> <p>Click Save (a) and then Close (b).</p> <p></p> </li> <li> <p>Hover over the Home () and click Environments.</p> <p></p> </li> <li> <p>Click Web chat.</p> <p></p> </li> <li> <p>On the Style tab, click the Streaming toggle to enable streaming.</p> <p>The streaming setting allows responses to be streamed to the assistant and displayed as they are generated versus waiting until the full response is received and then displayed.</p> <p></p> </li> <li> <p>Click the Home screen tab.</p> <p></p> </li> <li> <p>Customize the Home screen by setting a custom Greeting message and deleting the default Conversation starters. Optionally, adjust the Background style.</p> <p></p> </li> <li> <p>Click Suggestions.</p> <p></p> </li> <li> <p>Click the Suggestions toggle to turn this feature Off.</p> <p></p> </li> <li> <p>Click (a) Save and exit and then click (b) Close.</p> <p></p> </li> </ol>"},{"location":"Setup/creatingAssistant-configuringConvoSearch/#configure-the-base-large-language-model","title":"Configure the base large language model","text":"<p>There are enhancements that you can make to configure how the large language model (LLM) responds to your queries, including adding prompt instructions and configuring the LLM\u2019s answer behavior. The options are summarized here.</p> <ol> <li> <p>Hover over the Home () and click Generative AI.</p> <p></p> </li> <li> <p>Click Add instructions.</p> <p></p> </li> <li> <p>Enter a prompt instruction.</p> <p>Your assistant's LLM gives refined responses by following the prompt's instructions, which clarify how to achieve the end-goal of an action.</p> <p>Enter prompt instructions in the field. The maximum number of characters you can enter in the prompt instruction field is 1,000. </p> <p>The following is an example prompt instruction that works well. Experiment with different prompt instructions.</p> <pre><code>You are a subject matter expert on mainframe systems. Please respond to all prompts with truth and accuracy. Keep all answers short and concise, unless requested to provide details.\n</code></pre> <p>Note: When the instructions are typed in, they are automatically saved and the LLM is immediately trained on them.</p> <p></p> </li> <li> <p>Toggle General-purpose answering to Off and then click Save ().</p> <p>The ability exists to configure the answering behavior of your assistant to provide responses that are based on the preinstalled content or general content.</p> <p>On the Generative AI page (under Prompt Instructions), you see the Answer behavior section. After you configure Conversational search, you see that it is enabled (toggled on) with the search integration added.</p> <p>If you enable both general-purpose answering and conversational search, conversational search answering takes precedence over General-purpose answering. </p> <p>Recommendation: For purposes of retrieving Z-specific answers and responses, it is recommended that you turn off general-purpose answering and leave only conversational search turned on.</p> <p></p> </li> </ol>"},{"location":"Setup/creatingAssistant-configuringConvoSearch/#testing-conversational-search","title":"Testing conversational search","text":"<p>Now, you can begin issuing queries to test the assistant's responses. For more detailed responses, try appending \"Please provide a detailed response.\" to the end of your question.</p> <p>Important: Modify settings iteratively based on your assessment of response quality. Review and change them at any time. For example, add extra prompt instructions, change response verbosity, and modify OpenSearch indexes.</p> <ol> <li> <p>Hover over the Home () and click Preview.</p> <p></p> </li> <li> <p>Experiment with different prompts and validate that the answers are reasonable and related to IBM Z.</p> <p>Other prompts and responses follow. </p> <p>Note: The responses that you receive can vary from the ones shown.</p> <p>Prompt:</p> <pre><code>What is z/OS continuous delivery?\n</code></pre> <p>Example output:</p> <p></p> <p>Prompt: </p> <pre><code>What is the APF list in z/OS? Provide a detailed explanation?\n</code></pre> <p>Example output:</p> <p></p> <p>Prompt:</p> <pre><code>Why is Db2 different than other database systems?\n</code></pre> <p>Example output:</p> <p></p> <p>Prompt:</p> <pre><code>What happens during an IPL on IBM Z?\n</code></pre> <p>Example output:</p> <p></p> <p>Experiment with multi-turn (entire conversation) contextual awareness.</p> <p>In the December 2024 release of IBM watsonx Assistant for Z support for multi-turn contextual awareness was added. This capability enables the assistant to use an entire session history for retrieving search results and generating answers. This handles context-dependent questions well but may over-rely on past topics, even if the user has moved on.</p> <p>Experiment with this setting by changing your custom service contextual awareness setting from Single turn to Entire conversation.</p> <p></p> <p>Once enabled, try sequential prompts like:</p> <pre><code>What are some features of z/OS?\n</code></pre> <pre><code>Give me an itemized list?\n</code></pre> <pre><code>Tell me more about item 3.\n</code></pre> </li> </ol> <p>You have a working assistant that uses IBM Watson Assistant for Z. Explore different prompt instructions and settings. If you encounter issues, refer to the Troubleshooting section that follows for resolution.</p> <p>Continue to the Creating a stand-alone OpenSearch instance for document ingestion to learn how to configure a dedicated OpenSearch instance for ingesting client-specific documentation into the RAG model.</p>"},{"location":"Setup/creatingAssistant-configuringConvoSearch/#troubleshooting","title":"Troubleshooting","text":"<p>The following are issues that you may encounter. If the provided resolutions do not work, contact support by using the methods that are mentioned in the Support section.</p> Assistant responds to all prompts with, \"I might have information related to your query to share, but am unable to connect to my knowledge base at the moment\" <p>This Assistant is unable to connect to the custom service URL specified. This could be a network issue, the service may be down, the service may be restarting, or the service is no longer running at that URL.</p> <p>Before reaching out to Support, try the following:</p> <ul> <li> <p>Wait a few minutes and try again. It may be the service was in the process of restarting.</p> </li> <li> <p>If you printed this demonstration guide or saved a copy, verify you are using the most current version of the lab guide and the correct service URL (https://wxa4z-opensearch-wrapper-wxa4z-demo-v2-1-0.wxo4z-opc-opensearch-clus-47e063e6a3ad1f71bf2e58f91c3b4c2e-0000.us-south.containers.appdomain.cloud/v1/query). The URL may have changed since you saved or printed the lab guide.</p> </li> </ul>"},{"location":"byosd/documentIngestion/","title":"Create a stand-alone OpenSearch instance for document ingestion","text":""},{"location":"byosd/documentIngestion/#creating-a-stand-alone-opensearch-instance-for-document-ingestion","title":"Creating a stand-alone OpenSearch instance for document ingestion","text":"<p>Now that you created and deployed your own assistant with conversational search capabilities, your client can understand how watsonx Assistant for Z provides its content-grounded responses to any Z-related questions. In the previous section, you configured your assistant to use a pre-configured Z RAG that has over 220 knowledge sources, and uses this knowledge to provide AI-generated responses. </p> <p>Next, learn to enable clients to personalize the assistant with an internal knowledge base that contains documentation they add to the Retrieval Augmented Generation (RAG). This helps provide a level of context-awareness for their own environment when environment-specific questions are asked to the assistant.</p> <p>Now, install and configure a \u201cZ RAG\u201d on Red Hat OpenShift enabling the bring-your-own-search (BYOS) and bring-your-own-documentation (BYOD) capability to ingest other documentation. In doing so, you deploy a dedicated OpenSearch instance (BYOS). Then, connect your assistant to the new RAG database to provide responses based on the ingested documentation (BYOD). </p> <p>Below is a high-level, logical architecture of the environment deployed in this section.</p> <p></p> <p>Earlier, you provisioned three IBM Technology Zone (ITZ) environments. One of which was a single-node Red Hat OpenShift (SNO) cluster. If you have not reserved this environment, or it is not in the Ready state, return to the  IBM Technology Zone environment section to complete the reservation.</p>"},{"location":"byosd/documentIngestion/#install-the-red-hat-openshift-command-line-interface-utility","title":"Install the Red Hat OpenShift command line interface utility","text":"<p>The Red Hat OpenShift command line interface (CLI) utility, which is known as oc, must be installed on your local workstation. If you already installed the oc utility, you can proceed to log in to the SNO cluster.</p> <ol> <li> <p>Click the following link to open a browser window to your ITZ reservations.</p> <p>ITZ My reservations</p> </li> <li> <p>Click the Single Node OpenShift tile.</p> <p></p> </li> <li> <p>Scroll down and record the Cluster Admin Username and Cluster Admin Password.</p> <p></p> </li> <li> <p>Click the OCP Console link.</p> <p>Note: OCP stands for OpenShift Container Platform.</p> <p></p> </li> <li> <p>Enter the Cluster Admin Username and Cluster Admin Password values from step 3 and click Log in.</p> <p></p> </li> <li> <p>Click Help () and then click Command Line Tools.</p> <p></p> </li> <li> <p>Click the link under oc - OpenShift Command Line Interface (CLI) for the operating system of your local machine.</p> <p></p> <p>Clicking the preceding link automatically downloads either a .zip or .tar file specific to your operating system. Extract the file's content. Place the oc binary for your operating system (OS) in a directory that is in your default PATH, or set the PATH environment variable to include the location of the oc binary.</p> </li> <li> <p>Verify the installation by running the oc command on your local workstation.</p> <p></p><pre><code>oc --help\n</code></pre> Sample output:  Mac/OS users may need to adjust security settings. <p>The oc binary may cause a security exception. Adjust the security settings by opening the System Settings utility and clicking Privacy &amp; Security. Under Security locate the message about the oc binary and click Allow Anyway. Return to the terminal window and try the <code>oc --help</code> command again and click Allow Anyway when prompted.</p> </li> </ol>"},{"location":"byosd/documentIngestion/#prepare-to-ingest-documents","title":"Prepare to ingest documents","text":"<p>Before ingesting documents, complete the following setup steps.</p> <p></p>"},{"location":"byosd/documentIngestion/#log-in-to-the-openshift-cluster-from-your-local-terminal","title":"Log in to the OpenShift cluster from your local terminal","text":"<p>Note: If you just installed the oc utility, skip the next 5 steps.</p> <ol> <li> <p>Click the following link to open a browser window to your ITZ reservations.</p> <p>ITZ My reservations</p> </li> <li> <p>Click the Single Node OpenShift tile.</p> <p></p> </li> <li> <p>Scroll to the bottom of the reservation page and record the Cluster Admin Username and Cluster Admin Password.</p> <p></p> </li> <li> <p>Click the OCP Console link.</p> <p></p> </li> <li> <p>Enter the Cluster Admin Username and Cluster Admin Password values from step 3 and click Log in.</p> <p></p> </li> <li> <p>Click the kube:admin profile drop-down and click Copy login command.</p> <p></p> </li> <li> <p>Click Display Token.</p> <p></p> </li> <li> <p>Select and copy the Log in with this token string.</p> <p>For most operating systems, double-click the value, then right-click and select Copy.</p> <p></p> </li> <li> <p>Open a command prompt or terminal window on your local workstation.</p> </li> <li> <p>Paste the login command and press enter.</p> <p></p> </li> </ol>"},{"location":"byosd/documentIngestion/#create-a-working-directory","title":"Create a working directory","text":"<ol> <li> <p>Create a directory to store the configuration files that you will create in the next steps.</p> <p>Instructions vary by your local workstation's operating system.</p> <p>The directions that follow may vary depending on your operating system. The examples provided are based upon MacOS.</p> <pre><code>mkdir watsonxAssistant\n</code></pre> </li> <li> <p>Change to the new directory.</p> <pre><code>cd watsonxAssistant\n</code></pre> <p></p> </li> </ol>"},{"location":"byosd/documentIngestion/#install-ibm-certificate-manager-on-red-hat-openshift","title":"Install IBM Certificate Manager on Red Hat OpenShift","text":"<ol> <li> <p>In a text editor, create a file that is named <code>catalogCertManager.yaml</code> and paste the following text in the file.</p> <p>Formatting of the yaml file is critical!</p> <p>The content of the YAML file must be formatted exactly as shown. Use the Copy icon to prevent typographical errors.</p> <p>File name:  </p><pre><code>catalogCertManager.yaml\n</code></pre> <p>File contents: </p><pre><code>apiVersion: operators.coreos.com/v1alpha1 \nkind: CatalogSource \nmetadata: \n  name: ibm-cert-manager-catalog \n  namespace: openshift-marketplace \nspec: \n  displayName: ibm-cert-manager-4.2.7 \n  grpcPodConfig: \n    securityContextConfig: restricted \n  image: icr.io/cpopen/ibm-cert-manager-operator-catalog@sha256:4dcf4ace4b5f166f83b31063f7e6404dbf78d8e98a9d4fcf52fedf576a55ca6c \n  publisher: IBM \n  sourceType: grpc \n  updateStrategy: \n    registryPoll: \n      interval: 30m0s\n</code></pre> </li> <li> <p>Install the IBM Certificate Manager operator in the Red Hat OpenShift cluster.</p> <pre><code>oc apply -f catalogCertManager.yaml\n</code></pre> <p>The preceding command returns a message that states the ibm-cert-manager-catalog was created.</p> </li> <li> <p>In the OpenShift web console, click Operators and then select OperatorHub.</p> <p></p> </li> <li> <p>Click the Project to pull-down menu and click the Show default projects toggle.</p> <p></p> </li> <li> <p>Scroll down and select openshift-marketplace.</p> <p></p> </li> <li> <p>Enter IBM Cert Manager in the search field and then click the IBM Cert Manager tile.</p> <p>Be patient.</p> <p>It may take a minute or two for the IBM Cert Manager tile to appear. </p> <p>Note: The current version of the operator may differ than shown in the image below. Select the most current version.</p> <p></p> </li> <li> <p>Click Install.</p> <p></p> </li> <li> <p>Keep the default settings and click Install.</p> <p></p> <p>Do not continue until...</p> <p>The installation process takes a few minutes. Do not continue until you see the following message: Installed operator: ready for use.</p> <p></p> </li> </ol>"},{"location":"byosd/documentIngestion/#install-the-watsonx-assistant-for-z-operator-for-opensearch","title":"Install the watsonx Assistant for Z Operator (for OpenSearch)","text":"<ol> <li> <p>In your command prompt or terminal window, create a new namespace called <code>wxa4z-byos</code> in the Red Hat OpenShift cluster.</p> <pre><code>oc create namespace wxa4z-byos \n</code></pre> </li> <li> <p>Create or obtain your IBM Container Software production entitlement key.</p> <p>A production entitlement key is required to pull the container images that get deployed by the operator.</p> <p>To create or retrieve your existing entitlement key, follow the instructions here.</p> <p>If extra assistance is needed, refer to this site. </p> <p>Locate your existing key or create a new one and continue to the next step.</p> </li> <li> <p>Click copy and record your entitlement key for future use in a secure location.</p> <p></p> </li> <li> <p>In your command prompt or terminal window, set an environment variable with your production entitlement key.</p> <p>Substitute your production entitlement key copied in the last step for <code>&lt;entitlement key&gt;</code>.</p> <p>Mac OS: </p><pre><code>export IBM_CS_ENT_KEY=&lt;entitlement key&gt;\n</code></pre> <p>Microsoft Windows: </p><pre><code>set IBM_CS_ENT_KEY=&lt;entitlement key&gt;\n</code></pre> </li> <li> <p>Enter the following command to create a pull secret for the Container Registry.</p> <p>Mac OS: </p><pre><code>oc -n wxa4z-byos create secret docker-registry icr-pull-secret --docker-server=cp.icr.io --docker-username=cp --docker-password=$IBM_CS_ENT_KEY\n</code></pre> <p>Microsoft Windows: </p><pre><code>oc -n wxa4z-byos create secret docker-registry icr-pull-secret --docker-server=cp.icr.io --docker-username=cp --docker-password=%IBM_CS_ENT_KEY%\n</code></pre> <p></p> </li> <li> <p>In a text editor, create a file that is named <code>catalogSource.yaml</code> and paste the following text in the file.</p> <p>Formatting of the yaml file is critical!</p> <p>The content of YAML files must be formatted exactly as shown. Use the copy icon to prevent typographical errors.</p> <p>File name:  </p><pre><code>catalogSource.yaml\n</code></pre> <p>File contents: </p><pre><code>apiVersion: operators.coreos.com/v1alpha1 \nkind: CatalogSource \nmetadata: \n  name: ibm-wxa4z-operator-catalog \n  namespace: wxa4z-byos \nspec: \n  displayName: \"IBM watsonx Assistant for Z Operator Catalog\" \n  image: icr.io/cpopen/ibm-wxa4z-catalog:v2.1.0@sha256:a085d360b6aa0e40cf86a632eb5cd190a0407d1c54ec1b2d1d2fb5507f39a524\n  publisher: 'IBM' \n  sourceType: grpc \n  secrets: \n  - icr-pull-secret\n</code></pre> </li> <li> <p>Create your document catalog in the Red Hat OpenShift operator.</p> <pre><code>oc apply -f catalogSource.yaml\n</code></pre> <p></p> </li> <li> <p>In the Red Hat OpenShift web console, click OperatorHub and select the wxa4z-byos project.</p> <p></p> </li> <li> <p>Enter ibm watsonx in the search field and the click the IBM watsonx Assistant for Z Operator Catalog tile.</p> <p>Be patient.</p> <p>It may take a minute or two for the IBM watsonx Assistant for Z Operator Catalog tile to appear. Reload the browser page if the operator is not listed.</p> <p>Note: The current version of the operator may differ than that shown in the image below.</p> <p></p> </li> <li> <p>Click Install.</p> <p>Note: The current version of the operator may differ than the one shown in the image after this. Select the most current version.</p> <p></p> </li> <li> <p>Select A specific namespace on the cluster (a) under Installation mode and wxa4z-byos (b) for the Installed Namespace, then click Install (c).</p> <p></p> <p>Do not continue until...</p> <p>The installation process takes a few minutes. Do not continue until you see the following message: Installed operator: ready for use.</p> <p></p> </li> <li> <p>In your command prompt or terminal window, run the following commands to add the Container Registry credential to the operator's service account.</p> <p>Mac OS and Microsoft Windows: </p><pre><code>oc project wxa4z-byos\n</code></pre> <p>Mac OS: </p><pre><code>oc patch serviceaccount ibm-wxa4z-operator-controller-manager --type merge -p '{\"imagePullSecrets\": [{\"name\": \"icr-pull-secret\"}]}'\n</code></pre> <p>Microsoft Windows: </p><pre><code>oc patch serviceaccount ibm-wxa4z-operator-controller-manager --type merge -p \"{\\\"imagePullSecrets\\\":[{\\\"name\\\":\\\"icr-pull-secret\\\"}]}\"\n</code></pre> <p></p> </li> <li> <p>In the Red Hat OpenShift web console, under Workloads, click Pods.</p> <p></p> </li> <li> <p>Verify the two pods that start with ibm-wxa4z-operator have a status of Running and that all pods are Ready.</p> <p></p> </li> <li> <p>Run the following command to set the administrative policy for the workspace.</p> <pre><code>oc -n wxa4z-byos adm policy add-scc-to-user privileged -z byos\n</code></pre> <p></p> </li> </ol>"},{"location":"byosd/documentIngestion/#deploy-required-secrets-and-the-custom-bring-your-own-search-byosearch-resources","title":"Deploy required secrets and the custom bring-your-own-search (BYOSearch) resources","text":"<ol> <li> <p>In a text editor, create a file that is named <code>os-secret.yaml</code>, paste the following text in the file, and then modify the default password.</p> <p>File name:  </p><pre><code>os-secret.yaml\n</code></pre> <p>Substitute a secure password of your choosing for the string <code>&lt;OPENSEARCH_PASSWORD&gt;</code>. Record this value for later use.</p> <p>File contents: </p><pre><code>apiVersion: v1 \nstringData: \n  password: &lt;OPENSEARCH_PASSWORD&gt; \nkind: Secret \nmetadata: \n  name: opensearch-creds \n  namespace: wxa4z-byos \ntype: Opaque\n</code></pre> </li> <li> <p>Create the secret by running the following command.</p> <pre><code>oc apply -f os-secret.yaml\n</code></pre> </li> </ol> <p></p> <ol> <li> <p>In a text editor, create a file that is named <code>client-ingestion-secret.yaml</code>, paste the following text in the file, and then modify the default password.</p> <p>File name:  </p><pre><code>client-ingestion-secret.yaml\n</code></pre> <p>Substitute a secure authentication key of your choosing for the string <code>&lt;CLIENT_INGESTION_AUTHKEY&gt;</code>. The authentication key can be a random password.  Record this value for later use.</p> <p>File contents: </p><pre><code>apiVersion: v1 \nstringData: \n  authkey: &lt;CLIENT_INGESTION_AUTHKEY&gt; \nkind: Secret \nmetadata: \n  name: client-ingestion-authkey \n  namespace: wxa4z-byos \ntype: Opaque\n</code></pre> </li> <li> <p>Create the secret by running the following command.</p> <pre><code>oc apply -f client-ingestion-secret.yaml\n</code></pre> </li> <li> <p>In a text editor, create a file that is named <code>wrapper-creds.yaml</code>, paste the following text in the file, and then modify the default password. </p> <p>File name:  </p><pre><code>wrapper-creds.yaml\n</code></pre> <p>Substitute a secure password credential of your choosing for the string <code>&lt;WRAPPER_PASSWORD&gt;</code>. The password can be a random password.  Record this value for later use. Use this password in the following steps when you configure your BYOS connection in your assistant to connect to the network route. </p> <p>File contents: </p><pre><code>apiVersion: v1\nstringData:\n  username: admin\n  password: &lt;WRAPPER_PASSWORD&gt;\nkind: Secret\nmetadata:\n  name: wrapper-creds\n  namespace: wxa4z-byos\ntype: Opaque\n</code></pre> </li> <li> <p>Create the secret by running the following command.</p> <pre><code>oc apply -f wrapper-creds.yaml\n</code></pre> </li> <li> <p>Obtain and record your cluster domain that is used for routes by running the following command.</p> <pre><code>oc -n openshift-ingress-operator get ingresscontroller default -o jsonpath=\"{.status.domain}\"\n</code></pre> <p>The output from the command does not include a newline.</p> <p>The value returned for the cluster domain does not include a newline. When copying the value do not include the character or characters used for your command line prompt. Do not include the your prompt in the next step!</p> <p>Note: The output of the command will be a string similar to: apps.672b79320c7a71b728e523b4.ocp.techzone.ibm.com</p> </li> <li> <p>In a text editor, create a file that is named <code>byos.yaml</code> and paste the following text in the file.</p> <p>File name:  </p><pre><code>byos.yaml\n</code></pre> <p>Substitute the domain name recorded in the previous step for the string <code>&lt;YOUR_CLUSTER_DOMAIN&gt;</code>.</p> <p>File contents: </p><pre><code>apiVersion: wxa4z.watsonx.ibm.com/v1\nkind: BYOSearch\nmetadata:\n  name: byosearch\n  namespace: wxa4z-byos\nspec:\n  imagePullSecrets:\n  - name : icr-pull-secret\n  namespace: wxa4z-byos\n  clusterName: wxa4z-byos-cluster\n  clusterDomain: &lt;YOUR_CLUSTER_DOMAIN&gt;\n\n  opensearch:\n    secretName: opensearch-creds\n\n    persistence:\n      enabled: true\n      storageClass: \"managed-nfs-storage\"\n      accessModes:\n        - ReadWriteOnce\n      size: 24Gi\n\n  wrapper:\n    createRoute: true\n    resources:\n      requests:\n        cpu: 2\n        memory: \"500Mi\"\n    limits:\n        cpu: 2\n        memory: \"1Gi\"\n\n  clientIngestion:\n    secretName: client-ingestion-authkey\n\n    resources:\n      limits:\n        cpu: \"500m\"\n        memory: 2Gi\n        nvidia.com/gpu: \"0\"\n      requests:\n        cpu: \"500m\"\n        memory: 1Gi\n        nvidia.com/gpu: \"0\"\n    pvc:\n      storageClass: \"managed-nfs-storage\"\n      enabled: true\n      size: 24Gi\n</code></pre> </li> <li> <p>Run the following command to deploy BYOS on your cluster.</p> <pre><code>oc apply -f byos.yaml\n</code></pre> </li> </ol>"},{"location":"byosd/documentIngestion/#verify-all-the-required-pods-are-running-and-get-the-network-route-to-your-byos-instance","title":"Verify all the required pods are running and get the network route to your BYOS instance","text":"<ol> <li> <p>In the OCP console, verify that all pods have the status of Running or Completed.</p> <p>Do not continue until...</p> <p>The BYOS deployment can take 20 minutes or more to complete. Do not continue until all the pods have a status of \u201cRunning\u201d or \"Completed\". The next step is to retrieve your BYOS endpoint URL.</p> <p></p> </li> <li> <p>Under Networking, click Routes.</p> <p></p> </li> <li> <p>Copy and record the location for the wxa4z-opensearch-wrapper route.</p> <p></p> </li> </ol>"},{"location":"byosd/documentIngestion/#update-your-assistant-with-the-new-byos-instance-route","title":"Update your assistant with the new BYOS instance route","text":"<p> You are now ready to configure your assistant with the route to your BYOS instance.</p> <ol> <li> <p>Using the network route for your BYOS instance, append the string /v1/query to complete the URL endpoint. </p> <p>The URL should look similar to:</p> <p><code>https://wxa4z-opensearch-wrapper-wxa4z-byos.apps.672b79320c7a71b728e523b4.ocp.techzone.ibm.com/v1/query</code></p> <p>Important: The above URL will not work for you. Use the value of your specific OpenSearch instance that is recorded in the previous step.</p> </li> <li> <p>Update your assistant's custom search integration URL.</p> <p>Next, you need to return to your assistant in the watsonx Orchestrate AI assistant builder and update the custom search integration URL. Use the URL form the network route (with /v1/query) appended. Use admin for the Username and the Password will be the password that you specified in the <code>wrapper-creds.yaml</code> file. </p> <p>Don't recall how to set the customer search URL?</p> <p>Refer back to Creating an assistant and configuring conversational search if you don't remember how to specify the customer search URL.</p> </li> <li> <p>Test your assistant and verify that it is still answering questions that are related to IBM Z.</p> <p>Experiment with different prompts and validate that the answers provided are reasonable, and that you can view the documentation that was sourced. If responses are not received as expected, verify that the URL is formatted correctly and you specified the <code>wrapper-creds.yaml</code> password as the admin password.</p> </li> </ol>"},{"location":"byosd/documentIngestion/#troubleshooting","title":"Troubleshooting","text":"<p>The following are issues that you may encounter. If the provided resolutions do not work, contact support by using the methods that are mentioned in the Support section.</p> Pods have a status of ErrImagePull or ImagePullBackoff <p>If the pods starting with ibm-wxa4z-operator have a status of \u201cErrImagePull\u201d or \u201cImagePullBackoff\u201d, you can delete the pod and it will automatically restart and pull the image successfully. Wait until the pod is re-created successfully.</p> The wxa4z-client-ingestion pod does not start <p>Did you include the % character in the clusterDomain name when creating the byos.yaml? To resolve, edit the byos.yaml file and run the following command again. The current pod will be terminated and a new one started. This will take about 20 minutes to start.</p> <pre><code>oc apply -f byos.yaml\n</code></pre>"},{"location":"byosd/zassist/","title":"Install and use zassist to ingest client documents","text":""},{"location":"byosd/zassist/#installing-and-using-zassist-to-ingest-client-documents","title":"Installing and using zassist to ingest client documents","text":"<p>With bring-your-own-search (BYOS) installed and configured in your assistant, you can now prepare for document ingestion (bring-your-own-documents (BYOD)). BYOD demonstrates how clients can augment their assistant\u2019s conversational search by creating an internal knowledge base with their documentation. Using the client's documentation allows the assistant to provide valuable responses to a range of questions not possible with the default documentation available. </p> <p>As an example, a client mentioned that their developers often need reference material on company-specific legacy code or company-specific syntax. The users must search through volumes of documentation to find it or look at old code. Also, a need for their operational support group to quickly determine how to resolve technical issues using runbooks exists. </p> <p>You can show your client how watsonx Assistant for Z can assist developers and operational support personnel in finding answers about internal processes for code development and deployment. </p> <p>Currently, only PDF, HTML, and DOCX file formats are supported for ingestion.</p> <p>A high-level, logical architecture of the environment is illustrated in the following diagram.</p> <p></p> <p>To prepare for document ingestion, you can also reference the setup instructions that are located here.</p>"},{"location":"byosd/zassist/#install-the-zassist-utility","title":"Install the zassist utility","text":"<p>The zassist utility is an executable program that automates the ingestion of client documentation into the RAG for watsonx Assistant for Z. A version of zassist is available for download for IBMers and Business Partners for conducting pilots. Follow the steps to download and install zassist.</p> <p>How do clients get the zassist utility?</p> <p>The utility is available to clients through IBM Passport Advantage.</p> <ol> <li> <p>Click the following link and download the zassist.zip file.</p> <p>https://ibm.box.com/s/j3nt5iw4fqd5w2jgcqwxnjlsu8bpvl77</p> <p></p> </li> <li> <p>Extract the zassist.zip file.</p> </li> <li> <p>Locate the appropriate file for your local workstation's operating system.</p> <p></p> </li> <li> <p>Either copy the appropriate zassist file to a directory in your PATH, or add the appropriate directory to your PATH environment variable.</p> <p>Additional information for running the preceding tasks can be found here.</p> <p>Windows users may need to rename the file zassist file!</p> <p>If the zassist file does not execute properly, rename the file to zassist.exe.</p> </li> <li> <p>Run the zassist command to verify that it is working.</p> <pre><code>zassist\n</code></pre> <p></p> Mac/OS users may need to adjust security settings. <p>The zassist binary may cause a security exception. Adjust the security settings by opening the System Settings utility and clicking Privacy &amp; Security. Under Security locate the message about the zassist binary and click Allow Anyway. Return to the terminal window and try running teh command again.</p> </li> </ol>"},{"location":"byosd/zassist/#ingest-client-documentation-using-zassist","title":"Ingest client documentation using zassist","text":"<p>With the zassist command installed, you are now able to begin ingesting data. </p> <p>Step-by-step guidance for ingesting documents using zassist is provided in the IBM watsonx Assistant for Z documentation.</p> <ol> <li> <p>Download the <code>BYOD.zip</code> file.</p> <p>BYOD.zip</p> <p>What is in the sample client documentation?</p> <p>Three sample documents are included:</p> <ul> <li> <p>Mainframe_COBOL_Error_Codes.pdf</p> <p>This is a document containing company-specific mainframe COBOL error codes for their application. Developers within the organization typically review this document to quickly diagnose issues based on the application error codes returned.</p> </li> <li> <p>Mainframe_Operational_Incidents_Log.pdf</p> <p>This document is leveraged by the organization\u2019s operational support team and contains historical records of production-level incidents that occurred. For each incident, there\u2019s a record of what the incident was, the date, how it was resolved and who was involved in resolving the incident. </p> </li> <li> <p>COBOL-CICS-to-Java-Internal-Framework.pdf</p> <p>This document is leveraged by the development team and contains details about the organization\u2019s internal framework for developing applications consisting of legacy COBOL CICS interoperating with new Java code. Within the document contains company-specific coding practices and code syntax that the developers frequently reference.</p> </li> </ul> </li> <li> <p>Extract the <code>BYOD.zip</code> file.</p> </li> <li>Change to the <code>BYOD</code> directory.</li> <li> <p>Set the <code>TLS_VERIFY</code> environment variable to <code>false</code>.</p> <p>Mac OS: </p><pre><code>export TLS_VERIFY=false\n</code></pre> <p>Windows OS: </p><pre><code>set TLS_VERIFY=false\n</code></pre> </li> <li> <p>Initialize the <code>zassist</code> environment.</p> <pre><code>zassist init\n</code></pre> </li> <li> <p>Retrieve the server URL for the client ingestion server.</p> <p>Mac OS:</p> <pre><code>echo https://$(oc -n wxa4z-byos get route wxa4z-client-ingestion -o jsonpath=\"{.spec.host}\")\n</code></pre> <p>The output of this command is your unique URL for your client ingestion server. </p> <p>Windows OS (this method can also be used by Mac OS users):</p> <p>You can retrieve the URL in your OCP Web console by navigating to Networking Routes and then copy the URL for the wxa4z-client-ingestion route.</p> <p></p> </li> <li> <p>Retrieve the <code>client-ingestion-authkey</code>.</p> <pre><code>oc -n wxa4z-byos get secret client-ingestion-authkey -o jsonpath=\"{.data.authkey}\" | base64 -d\n</code></pre> <p>The output of this command is your unique auth-key that you had previously set. You will need the output of both previous commands in the next step. </p> If the command doesn\u2019t work for you... <p>You can find your <code>authkey</code> value by viewing the <code>client-ingestion-secret.yaml</code> file you created and copying the value set for the <code>authkey</code> parameter. </p> </li> <li> <p>Login to your server. Replace <code>&lt;server url&gt;</code> with the value from step 6.</p> <pre><code>zassist login &lt;server url&gt;\n</code></pre> </li> <li> <p>When prompted, enter the password from step 7. Verify that a Success message is received.</p> </li> <li> <p>Verify <code>zassist</code> is ready to ingest documents by checking the status.</p> <pre><code>zassist status\n</code></pre> <p></p> </li> <li> <p>Ingest the documentation using the commands.</p> <p>For the next steps, you must be in the root directory called BYOD.</p> <pre><code>zassist ingest dev\n</code></pre> <pre><code>zassist ingest ops\n</code></pre> </li> <li> <p>Upload the ingested documents.</p> <pre><code>zassist load dev\n</code></pre> <pre><code>zassist load ops\n</code></pre> </li> <li> <p>Verify that all documents were successfully ingested and loaded.</p> <pre><code>zassist status\n</code></pre> <p></p> </li> </ol>"},{"location":"byosd/zassist/#verify-that-the-assistant-is-using-the-ingested-documents","title":"Verify that the assistant is using the ingested documents","text":"<p>Use the watsonx Orchestrate AI assistant builder to verify your document ingestion.</p> <ol> <li> <p>Enter the following prompt in your assistant and record the response (cut and paste into a text file on your local machine).</p> <pre><code>The customer application is failing with ERR-CBL-001, what does this internal error mean?\n</code></pre> <p></p> </li> <li> <p>Click the Down arrow to view the citations for the response.</p> <p></p> </li> <li> <p>Click View source for the Mainframe_COBOL_Error_Codes-... citation.</p> <p></p> <p>Take note of the order of the response citations!</p> </li> <li> <p>Accept the security risk to view the source document for any ingested document cited.</p> <p>The steps to accept the security risk for the document are not shown as it varies by the browser you are using. The risk occurs because the certificate for the connection to the SNO instance is not secure. Notice that the URL contains the path to your SNO instance route.</p> <p></p> </li> <li> <p>Repeat the preceding steps for the following prompts in your assistant and record the responses (cut and paste into a text file on your local machine).</p> <pre><code>Are there any production incidents that were resolved in relation to Data corruption in the production database. If yes who can I collaborate with to resolve a similar issue today and what are their names?\n</code></pre> <pre><code>What specific syntax changes do I need to make in COBOL to call Java using the internal framework? Please provide a detailed explanation. \n</code></pre> <pre><code>What is the internal git lab link to execute the Java on z/OS pipeline?\n</code></pre> </li> </ol>"},{"location":"byosd/zassist/#adjusting-the-search-behavior","title":"Adjusting the search behavior","text":"<p>Do you recall the Metadata field when you configured your assistant?</p> <p></p> <p>The Metadata field provides a way to adjust your assistant\u2019s behavior during conversational search for your OpenSearch instance. Now that you have your own docs that are ingested for conversational search, you can set the metadata field for your assistant to use those documents in its content-grounded search. If you leave the metadata field empty, then it defaults to settings found to perform well but may not use the ingested documents as part of the search results.</p> <p>If you leave the Metadata field empty, OpenSearch relies on the default settings, which means OpenSearch searches all the default IBM-provided documentation and all of the ingested customer documentation using the following value:</p> <pre><code>{\"ibm_indices\":\"*_ibm_docs_slate,*_ibm_redbooks_slate\",\n\u201ccustomer_indices\u201d:\u201ccustomer_*\u201d}\n</code></pre> <p>Replacing the wildcard string with an explicit list of indices allows for personalization. The metadata setting is where you can input specific indices (pointing to the underlying documentation) that you want your assistant to use for the content-grounded search. There are over 220 products and topics that the OpenSearch instance has IBM Documentation for. You can find those indices and products here.</p> <p>You can input a subset of indices into the \u201cMetadata\u201d field in cases where you want your assistant to only gather context for specific IBM products or topics. The specific indices can be listed out in this format:</p> <pre><code>{\u201cibm_indices\u201d:\u201c&lt;comma separated index values&gt;\u201d,\u201ccustomer_indices\u201d:\u201ccustomer_*\u201d}\n</code></pre> <p>For example, if you want your assistant to reference only documentation for \u201cDb2 Analytics Accelerator for z/OS\u201d and no ingested client documentation, you can enter the following into the metadata field:</p> <pre><code>{\u201cibm_indices\u201d:\u201css4lq8_ibm_docs_slate\u201d}\n</code></pre> <p>If you have a mix of IBM Documentation and client documentation ingested, then there\u2019s an optional search string that you can use to set the \u201cweights\u201d used for each. </p> <p>For example:</p> <p></p><pre><code>{\"doc_weight\":\n{\"product_docs\":0.5,\n\"customer_docs\":0.5},\n\"ibm_indices\":\"*_ibm_docs_slate,*_ibm_redbooks_slate\",\n\"standardize\":true,\n\"customer_indices\":\"customer_*\"\n}\n</code></pre> In this case, \u201cproduct_docs\u201d is the weight that is assigned to \u201cibm_indices\u201d and \u201ccustomer_docs\u201d is the weight that is assigned to \u201ccustomer_indices\u201d. For more information on customizing the metadata field for conversational search, refer to this supplemental video found here. <ol> <li> <p>Set the (a) Metadata field for your BYOS custom search instance to the following value, click (b) Save, and then click (c) Close. Notice the weight for customer_docs is heavier than the weight for product_docs.</p> <pre><code>{\"doc_weight\":\n{\"product_docs\":0.2,\n\"customer_docs\":0.8},\n\"ibm_indices\":\"*_ibm_docs_slate,*_ibm_redbooks_slate\",\n\"standardize\":true,\n\"customer_indices\":\"customer_*\"\n}\n</code></pre> <p></p> </li> <li> <p>Hover over the Home () icon and click Preview.</p> </li> <li> <p>Click the Restart conversation () icon.</p> <p></p> </li> <li> <p>Repeat the queries four queries run earlier and record the results and the order of the response citations.</p> </li> </ol> <p>Compare the two sets of results. Notice how the answers changed based on the weighting of the ingested documents versus the IBM product documentation. Were the ingested documents always the first document cited? If not, why do you think that is? </p> <p>Before proceeding, experiment with different metadata and other configuration settings for your custom service instance.</p> <p>For client pilots</p> <p>If you or your client have other documents to ingest, you can do so by repeating the steps using zassist. The Velocity Pilot ITZ environment is limited in compute and storage capacity. The following limits should be adhered to:</p> <ul> <li> <p>Loading documents can take a long time, especially with &gt; 100 MB of text.</p> </li> <li> <p>It is recommended to run large loads late at night.</p> </li> <li> <p>When loading, ensure your workstations does not sleep during the process.</p> </li> <li> <p>If you receive a batch time error, set the batch size to a lower number for that command. For example:</p> <pre><code>zassist ingest . -s 50\n</code></pre> </li> </ul>"},{"location":"skills/connectingApp/","title":"Connect the app to the assistant","text":""},{"location":"skills/connectingApp/#connecting-skills-to-your-assistant","title":"Connecting skills to your assistant","text":"<p>Once you have a subset of skills that are published, the application you created can be connected to your assistant. </p> <ol> <li> <p>Expand the main menu and select Skill sets.</p> <p></p> </li> <li> <p>Click the Team Skills drop-down and select the Draft of your assistant.</p> <p></p> </li> <li> <p>Click the Connections tab.</p> <p></p> </li> <li> <p>Click the Search () icon.</p> <p></p> </li> <li> <p>Search for the application name you specified in the previous section.</p> <p></p> </li> <li> <p>Click the ellipses () and click Connect app.</p> <p></p> </li> <li> <p>On the Connect to Ansible Controller Skills form, keep the defaults and click Connect app.</p> <p></p> </li> <li> <p>Enter the username (a) and password (b) using the username (<code>admin</code>) and password for your IBM Technology Zone (ITZ) watsonx Assistant for Z Pilot - AAP &amp; z/OS reservation, and then click Connect app (c).</p> <p></p> </li> </ol> <p>The application is now connected to the draft version of your assistant.</p> <p></p> <p>Continue to the next section to create actions for your assistant.</p>"},{"location":"skills/creatingActions/","title":"Create actions for the assistant","text":""},{"location":"skills/creatingActions/#creating-actions-for-your-assistant","title":"Creating actions for your assistant","text":"<p>Now that the skills in your application are connected to your assistant, you are ready to create actions that are tied to those skills. Learn more about building actions here</p>"},{"location":"skills/creatingActions/#configure-the-number-of-input-fields","title":"Configure the number of input fields","text":"<p>Before configuring actions, it is important to modify a setting within watsonx Orchestrate that allows triggered skills to display as forms (versus conversational skills). </p> <ol> <li> <p>Click your (a) profile icon and then click (b) Settings</p> <p>Learn more about configuring input fields here.</p> <p></p> </li> <li> <p>Click the Skill configurations tab.</p> <p></p> </li> <li> <p>Enter 0 for the Number of form fields.</p> <p></p> </li> </ol>"},{"location":"skills/creatingActions/#create-actions","title":"Create actions","text":"<ol> <li> <p>Click the main menu and select AI assistant builder.</p> <p></p> </li> <li> <p>Hover over the Home icon () and click Actions.</p> <p></p> </li> <li> <p>Click Create action.</p> <p></p> </li> <li> <p>Click the Skill-based action tile.</p> <p></p> </li> <li> <p>Select the z/OS Gather Facts tile and click Next.</p> <p>Note, it may take a minute for the page to display the action tiles. The date that is shown in the z/OS Gather Facts tile reflects when you added the skill to your application.</p> <p></p> </li> <li> <p>On the New action dialog, (a) enter a prompt a user of the assistant might use to initiate the action and then (b) click Save.</p> <p>Sample prompts:</p> <pre><code>Get z/OS facts\n</code></pre> <pre><code>Gather z/OS facts\n</code></pre> <p></p> </li> <li> <p>Add any extra prompts (a) and then click the save () (b).</p> <p></p> </li> <li> <p>Click Preview.</p> <p></p> </li> <li> <p>Enter one of the prompts you specified in step 9 or 10.</p> <p>Prompt: </p><pre><code>Get z/OS facts\n</code></pre> <p></p> </li> <li> <p>Review the returned results and record the job number.</p> <p>If an error is generated or the action is not performed and only search results are returned, review the following Troubleshooting section.</p> <p></p> </li> </ol>"},{"location":"skills/creatingActions/#verify-the-job-in-the-ansible-automation-platform-console","title":"Verify the job in the Ansible Automation Platform console","text":"<p>Return to the Ansible Automation Platform (AAP) console and review the job information.</p> <ol> <li> <p>Click Jobs and then click the job number that you recorded in the previous step for the z/OS Gather Facts skill.</p> <p></p> </li> <li> <p>Review both the Details and Output for the z/OS Gather Facts job.</p> <p>Recall, that in the assistant, the contents shown in the Output of the Ansible job were not displayed. </p> <p></p> </li> </ol> <p>IBM watsonx Assistant for Z provides utility skills to retrieve the job output. It is also possible to create a skill flow that executes the z/OS Gather Facts skill followed by the Retrieve job output utility skill in sequence; passing the job ID from the first skill to the second to view the output within the assistant. Creating a skill flow is covered in the next section.</p>"},{"location":"skills/creatingActions/#troubleshooting","title":"Troubleshooting","text":"Skill returns \"Sorry, we're having issues generating a response\" or the action is not performed and only search results are returned. <p>This error appears to be an intermittent issue when a skill is first added. To resolve, add the skill to your personal skills catalog using the steps that follow. If you encounter the issue, try the steps that follow:</p> <ol> <li> <p>Expand the main menu and select Chat.</p> <p></p> </li> <li> <p>Click Add skills from the catalog.</p> <p></p> </li> <li> <p>Search for the skill app you created earlier and click the tile for your app.</p> <p></p> </li> <li> <p>Click Add skill for all the skills you want to add.</p> <p></p> </li> <li> <p>Click Connect app.</p> <p></p> </li> <li> <p>Enter the (a) username and (b) password using the username (admin) and password for your IBM Technology Zone (ITZ) watsonx Assistant for Z Pilot - AAP &amp; z/OS reservation (AAP User Password (Use SSH key to login, only use password for UI)), and then click Connect app.</p> <p> </p> </li> <li> <p>Expand the main menu and select Chat.</p> <p> </p> </li> <li> <p>Try one of the prompts you created for your skill.</p> <p>Prompt: </p><pre><code>Gather z/OS facts\n</code></pre> <p> </p> </li> </ol> <p>You should now be able to run the skill through the assistant preview.</p>"},{"location":"skills/creatingCustomActions/","title":"Create custom-built actions","text":""},{"location":"skills/creatingCustomActions/#creating-custom-built-actions","title":"Creating custom-built actions","text":"<p>To this point, you learned how to:</p> <ul> <li> <p>import skills into watsonx Orchestrate</p> </li> <li> <p>add applications with those skills to your assistant</p> </li> <li> <p>create skill-based actions for your assistant</p> </li> <li> <p>combine skills in a skill flow</p> </li> </ul> <p>You can also create custom-built actions. Custom-built actions have actions with different steps to take in conversations and form sequences of prompts that define the conversation experience. The steps can be defined with or without conditions, which help control the custom responses. Steps within the custom action can end with routing to conversational search, triggering another existing subaction, and other actions. Custom-built actions are a powerful way of customizing the user's experience.</p> <p>Learn more about creating custom-built actions here.</p>"},{"location":"skills/creatingFlows/","title":"Create skill flows for the assistant","text":""},{"location":"skills/creatingFlows/#creating-skill-flows","title":"Creating skill flows","text":"<p>In the previous section, you ran the Gather z/OS facts skill, but the output was not displayed in the assistant. To both run the action and display the results, a skill flow is needed. Skills are often more valuable when combined with other skills. You can create a skill flow to use two or more skills together to finish a task (like returning the output of a previous skill). When you create a skill flow, you map the output of one skill as the input for subsequent skills. Learn more about creating skill flows here.</p> <p>As mentioned in a previous section, default utility skills that are provided with the watsonx Assistant for Z skills collection. The Retrieve job output utility skill is used to return the output of a skill.</p>"},{"location":"skills/creatingFlows/#add-the-utility-skill","title":"Add the utility skill","text":"<ol> <li> <p>Open IBM watsonx Orchestrate Skill studio.</p> <p></p> </li> <li> <p>Expand Create and click Import API.</p> <p></p> </li> <li> <p>Click the z/OS Skills accelerator (Trial) tile.</p> <p></p> </li> <li> <p>Enter the following values in the z/OS Skills accelerator form and then click Connect.</p> <p>Use the URL, User Name, and Password values recorded in the Explore Ansible Automation Platform section earlier.</p> <p>a: Connection Type: <code>ansible</code></p> <p>b: Application Name: &lt;use the same application name from the previous section&gt;</p> <p>c: Connection URL: &lt;enter the URL for your AAP UI&gt;</p> <p>d: User Name: &lt;enter the AAP User Name (for UI access)&gt;</p> <p>e: Password: &lt;enter the AAP User Password&gt;</p> <p>f: Search Pattern: <code>*</code></p> <p></p> </li> <li> <p>Expand Ansible Utility Skills and click Ansible Utility Skills.</p> <p></p> </li> <li> <p>Select Retrieve job output and click Save as draft.</p> <p></p> </li> <li> <p>Click the ellipses () for the Retrieve job output skill and select Enhance this skill.</p> <p></p> </li> <li> <p>Review the skill settings and then click Publish.</p> <p></p> </li> <li> <p>Select Skill sets from the main menu.</p> <p></p> </li> <li> <p>Select (a) your draft assistant in the Team Skills drop-down list and (b) click the Connections tab.</p> <p></p> </li> <li> <p>Click the Search () icon.</p> <p></p> </li> <li> <p>Search for the application name you specified earlier.</p> <p></p> </li> <li> <p>Click the (a) ellipses () for your application and (b) click Edit connection.</p> <p></p> </li> <li> <p>Verify that the application is Connected (a) and then click Close (b).</p> <p>Connect the application if it is not connected.</p> <p>Use the AAP user name (admin) and the AAP password for your ITZ reservation.</p> <p></p> </li> </ol>"},{"location":"skills/creatingFlows/#add-the-skills-to-your-personal-skills","title":"Add the skills to your Personal skills","text":"<ol> <li> <p>Click Skill catalog in the main menu.</p> <p></p> </li> <li> <p>Search for the application name you specified earlier.</p> <p></p> </li> <li> <p>Click the tile for your application.</p> <p>Note, the tile name is proceeded by Ansible Controller Skills.</p> <p></p> </li> <li> <p>Click Add skill for each of the skills you want to add to the flow.</p> <p></p> </li> </ol>"},{"location":"skills/creatingFlows/#create-the-skill-flow","title":"Create the skill flow","text":"<ol> <li> <p>Click Skill studio in the main menu.</p> <p></p> </li> <li> <p>Expand the Create drop-down menu and click Skill flow.</p> <p></p> </li> <li> <p>Click the + icon.</p> <p></p> <p>Next, you need to add the z/OS Gather Facts skill and the Retrieve job output skill to the skill flow. Use the Search apps function to locate the skills.</p> </li> <li> <p>Search for the application name you specified earlier and click the tile.</p> <p></p> </li> <li> <p>Click Add Skill in the z/OS Gather Facts tile.</p> <p></p> </li> <li> <p>Verify the z/OS Gather Facts skill is added to the skill flow.</p> <p></p> </li> <li> <p>Click the + icon after the z/OS Gather Facts tile.</p> <p></p> </li> <li> <p>Repeat steps 5 and 6 for the Retrieve job output skill. </p> <p>After adding the Retrieve job output skill, your skill flow should look like:</p> <p></p> <p>Next you must map the output values of the first skill to the input of the second skill. In this case, pass the job ID output from z/OS Gather Facts as an input for Retrieve job output. </p> </li> <li> <p>Click the Retrieve job output tile.</p> <p></p> </li> <li> <p>Select the Input tab and click the id field.</p> <p></p> </li> <li> <p>Click the z/OS Gather Facts skill in the Mapping data for \"id\" section.</p> <p></p> </li> <li> <p>Click the job icon.</p> <p></p> </li> <li> <p>Verify that the job appears in the id field.</p> <p></p> </li> <li> <p>Optionally, toggle the Hide this from the user setting.</p> <p>For this lab guide, this option is left disabled. Learn more about this option here.</p> <p></p> </li> <li> <p>Click the x to close mapping window.</p> <p></p> </li> <li> <p>Click the pencil ().</p> <p></p> </li> <li> <p>Enter a (a) Name and (b) Description for your skill flow and then (c) click Save.</p> <p></p> </li> <li> <p>Expand the Actions pull-down and click Save as draft.</p> <p></p> </li> <li> <p>Expand the Actions pull-down and click Enhance.</p> <p></p> <p>On the Enhancing the skill pages, you can:</p> <ul> <li> <p>modify the skill name, description, and version</p> </li> <li> <p>add phrases (prompts) that will be recognized by the assistant to call the skill flow</p> </li> </ul> </li> <li> <p>Click the Phrases tab.</p> <p></p> </li> <li> <p>Replace the existing phrases (prompts) and then click Publish.</p> <p>Notice that the default prompts are either not intuitive (the skill flow name) or a bit verbose. Replace the existing phrases with phrases that you anticipate users will use.</p> <p>Example prompts: </p><pre><code>Show me z/OS facts\n</code></pre> <pre><code>Gather and display z/OS facts\n</code></pre> <p></p> </li> </ol>"},{"location":"skills/creatingFlows/#enable-the-skill-flow-in-your-assistant","title":"Enable the skill flow in your assistant","text":"<ol> <li> <p>Click AI assistant builder in the main menu.</p> <p></p> </li> <li> <p>Hover over the Home () and click Actions.</p> <p></p> </li> <li> <p>Click New action.</p> <p></p> </li> <li> <p>Click the Skill-based action tile.</p> <p></p> </li> <li> <p>Click the skill flow that you created earlier and then click Next.</p> <p>Note: it may take a minute for the tiles to appear on the screen.</p> <p></p> </li> <li> <p>Enter an example prompt for the skill and click Save.</p> <p>You can use one of the prompts you used earlier for the skill flow.</p> <pre><code>Show me z/OS facts\n</code></pre> <p></p> </li> <li> <p>Enter any additional phrases (prompts) and then click the save ().</p> <p></p> </li> <li> <p>Click close (x).</p> <p></p> </li> <li> <p>Select the original skill that you created (a) (not the skill flow you just created), click the ellipses (b), and then click Delete (c).</p> <p></p> </li> <li> <p>Wait for system training to complete.</p> <p>Note: The message changes to \"System is trained\" and then disappears.</p> <p></p> </li> <li> <p>Click Preview.</p> <p></p> </li> <li> <p>Enter one of the prompts you specified into the assistant preview.</p> <pre><code>Show me z/OS facts\n</code></pre> <p></p> </li> <li> <p>Wait 10 seconds and then click Apply.</p> <p>Note: It is important to wait for the first job to complete before submitting the second job in the flow.</p> <p></p> </li> <li> <p>Review the results from the skill flow.</p> <p>Use both scroll bars in the assistant preview to review all the returned information. The output is similar to what was seen in the AAP web console. The character strings like <code>[0;32m</code> are special characters that are not properly displayed in the assistant preview interface.</p> <p></p> Sample output form the Z/OS gather facts flow. <p>Content </p> <p>Identity\u00a0added:\u00a0/runner/artifacts/16/ssh_key_data\u00a0(/runner/artifacts/16/ssh_key_data) [1;35m[WARNING]:\u00a0Collection\u00a0ibm.ibm_zos_core\u00a0does\u00a0not\u00a0support\u00a0Ansible\u00a0version\u00a02.14.2[0m</p> <p>PLAY\u00a0[Gather\u00a0z/OS-specific\u00a0facts.]\u00a0*********</p> <p>TASK\u00a0[Gather\u00a0all\u00a0facts\u00a0about\u00a0z/OS\u00a0host.]\u00a0********* [0;32mok:\u00a0[zos_host][0m</p> <p>TASK\u00a0[Print\u00a0gathered\u00a0facts\u00a0about\u00a0the\u00a0master\u00a0catalog.]\u00a0**** [0;32mok:\u00a0[zos_host]\u00a0=&gt;\u00a0{[0m [0;32m\u00a0\u00a0\u00a0\u00a0\"msg\":\u00a0[[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"master\u00a0catalog\u00a0dsn:\u00a0CATALOG.VS01.MASTER\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"master\u00a0catalog\u00a0volser:\u00a0OPEVS1\"[0m [0;32m\u00a0\u00a0\u00a0\u00a0][0m [0;32m}[0m</p> <p>TASK\u00a0[Print\u00a0only\u00a0CPC\u00a0and\u00a0IODF\u00a0info\u00a0from\u00a0gathered\u00a0z/OS\u00a0facts.]\u00a0****** [0;32mok:\u00a0[zos_host]\u00a0=&gt;\u00a0{[0m [0;32m\u00a0\u00a0\u00a0\u00a0\"msg\":\u00a0[[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"manufacturer:\u00a0IBM\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"model:\u00a0A00\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"plant:\u00a0C1\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"iodf\u00a0name:\u00a0PROV.IODF00\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"iodf\u00a0config:\u00a0DEFAULT\"[0m [0;32m\u00a0\u00a0\u00a0\u00a0][0m [0;32m}[0m</p> <p>TASK\u00a0[Print\u00a0out\u00a0all\u00a0gathered\u00a0facts\u00a0about\u00a0the\u00a0z/OS\u00a0host.]\u00a0***** [0;32mok:\u00a0[zos_host]\u00a0=&gt;\u00a0{[0m [0;32m\u00a0\u00a0\u00a0\u00a0\"ansible_facts\":\u00a0{[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"arch_level\":\u00a0\"2\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"cpc_nd_manufacturer\":\u00a0\"IBM\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"cpc_nd_model\":\u00a0\"A00\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"cpc_nd_plant\":\u00a0\"C1\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"cpc_nd_seqno\":\u00a0\"20D90792EB76\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"cpc_nd_type\":\u00a0\"008562\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"edt\":\u00a0\"00\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"hw_name\":\u00a0\"\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"ieasym_card\":\u00a0\"(00,K2)\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"io_config_id\":\u00a0\"00\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"iodate\":\u00a0\"\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"iodesc\":\u00a0\"\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"iodf_config\":\u00a0\"DEFAULT\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"iodf_name\":\u00a0\"PROV.IODF00\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"iodf_unit_addr\":\u00a0\"DE28\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"ioproc\":\u00a0\"\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"iotime\":\u00a0\"\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"ipaloadxx\":\u00a0\"K2\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"ipl_volume\":\u00a0\"D25VS1\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"load_param_device_num\":\u00a0\"DE28\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"load_param_dsn\":\u00a0\"SYS0.IPLPARM\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"lpar_name\":\u00a0\"\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"master_catalog_dsn\":\u00a0\"CATALOG.VS01.MASTER\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"master_catalog_volser\":\u00a0\"OPEVS1\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"nucleus_id\":\u00a0\"1\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"operator_prompt_flag\":\u00a0\"M\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"parmlib_dsn\":\u00a0\"K2.PARMLIB\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"parmlib_volser\":\u00a0\"USRVS1\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"primary_jes\":\u00a0\"JES2\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"product_mod_level\":\u00a0\"00\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"product_name\":\u00a0\"z/OS\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"product_owner\":\u00a0\"IBM\u00a0CORP\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"product_release\":\u00a0\"05\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"product_version\":\u00a0\"02\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"smf_name\":\u00a0\"VS01\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"sys_name\":\u00a0\"VS01\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"sysplex_name\":\u00a0\"LOCAL\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"tsoe_rel\":\u00a0\"05\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"tsoe_ver\":\u00a0\"4\",[0m [0;32m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"vm_name\":\u00a0\"\"[0m [0;32m\u00a0\u00a0\u00a0\u00a0}[0m [0;32m}[0m</p> <p>PLAY\u00a0RECAP\u00a0*********** [0;32mzos_host[0m\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0:\u00a0[0;        32mok=4\u00a0\u00a0\u00a0                         [0m\u00a0changed=0\u00a0\u00a0\u00a0\u00a0unreachable=0\u00a0\u00a0\u00a0\u00a0failed=0\u00a0\u00a0\u00a0\u00a0skipped=0\u00a0\u00a0\u00a0\u00a0rescued=0\u00a0\u00a0\u00a0\u00a0ig      nored=0\u00a0\u00a0\u00a0</p> </li> </ol> <p>The previous scenario might or might not be relevant for your client's use case. The scenario illustrates how to sequence skills together in a skill flow to create an action that your assistant triggers based on prompts that use the pre-configured Ansible automation templates. You are encouraged to create your own skill flows and prompts that use other skills available within the AAP instance. As an example, create a skill flow for the z/OS Ping skill. Be sure to add the Retrieve job output skill to view the results.</p> <p>Next, learn about custom-built actions.</p>"},{"location":"skills/exploreAAP/","title":"Explore Ansible Automation Platform","text":""},{"location":"skills/exploreAAP/#explore-ansible-automation-platform","title":"Explore Ansible Automation Platform","text":"<p>After you reserved the Ansible Automation Platform (AAP) and Wazi z/OS environment in IBM Technology Zone (ITZ) and the reservation is in the Ready state, follow these steps to explore AAP. </p>"},{"location":"skills/exploreAAP/#access-the-aap-and-wazi-as-a-service-environment","title":"Access the AAP and Wazi as a Service environment","text":"<p>Be sure to record the information as instructed</p> <p>Several of the steps below instruct you to record values from your ITZ reservation. Be sure to do this as they will not only be used in this section, but also in later sections of the lab guide.</p> <ol> <li> <p>In the IBM Technology Zone portal, expand My TechZone and select My Reservations, or click the following link.</p> <p>ITZ My reservations</p> <p></p> </li> <li> <p>Click the watsonx Assistant for Z Pilot - AAP &amp; z/OS tile.</p> <p></p> </li> <li> <p>Locate and record the AAP User Name (For UI access) and AAP User Password fields.</p> <p></p> </li> <li> <p>Record and then click the Ansible Automation Platform UI link.</p> <p></p> </li> <li> <p>Enter the Username and Password that is recorded in step 3 and click Log In.</p> <p></p> </li> <li> <p>Click Templates under the Resources section.</p> <p></p> </li> </ol> <p>The AAP instance is preconfigured to the Wazi aaS instance</p> <p>Note that because the AAP instance and the back-end z/OS system are preconfigured, no changes are needed to execute the templates and they will target your provisioned z/OS system by default.</p> <ol> <li> <p>Locate the z/OS Ping template and click the rocket () icon to start the template. </p> <p></p> </li> <li> <p>Observe the z/OS Ping job run.</p> <p></p> </li> </ol> <p>Take time to explore the other templates that are ready to use. Learn more about the automation capabilities here.</p>"},{"location":"skills/gettingStartedSkills/","title":"Get started with skills and actions","text":""},{"location":"skills/gettingStartedSkills/#getting-started-with-skills-and-actions","title":"Getting started with skills and actions","text":"<p>Watsonx Assistant for Z automates a range of IBM Z related tasks through assistant interactions by importing skills. Each skill is a pre-defined automation that accomplishes some unit or units of work by running tasks. For example, skills can view z/OS IPL information or work with z/OS datasets.</p> <p>Watsonx Assistant for Z extends watsonx Orchestrate, allowing users to build new skills from Ansible Automation platform or z/OS Management Facility (z/OSMF) through the Z Skills Accelerator extension. The Z Skills Accelerator extension connects Ansible and z/OS application programming interfaces (APIs) and imports automation as Ansible Playbooks, JCL, or REXX as skills. Learn more importing and building skills here.</p> <p>Aa high-level, logical architecture of the environment is illustrated in the figure that follows.</p> <p></p>"},{"location":"skills/gettingStartedSkills/#environments","title":"Environments","text":""},{"location":"skills/gettingStartedSkills/#watsonx-orchestrate","title":"Watsonx Orchestrate","text":"<p>The Z Skills Accelerator extension is already configured in your watsonx Orchestrate IBM Technology Zone (ITZ) environment. You can use this component to import new skills.</p>"},{"location":"skills/gettingStartedSkills/#ansible-automation-platform-and-wazi-as-a-service","title":"Ansible Automation Platform and Wazi as a Service","text":"<p>To import skills for automations, you use Ansible Automation Platform (AAP) and Wazi as a Service (Wazi aaS) to serve as the z/OS back-end. Learn more about AAP here. Learn more about Wazi, here.</p> <p>The two resources are provisioned together in the ITZ environment that you reserved earlier. This environment enables the ability to manage and automate z/OS tasks and subsystems with various preinstalled Ansible playbooks. It includes a z/OS back-end (Wazi as a Service) with all needed prerequisites.</p> <p>The playbooks provided cover various use cases for automating z/OS management. Ansible\u2019s capabilities for automating various Z-specific tasks are not limited to the use cases that are preinstalled in the AAP instance. The preinstalled playbooks are tasks from the \u2018IBM z/OS core collection\u2019. Using this environment accelerates the ability to showcase the value of watsonx assistant for Z, and to get started with simple automations that can be expanded.</p> <p>The ITZ environment gives you access to AAP, which is preconfigured to target the accompanying z/OS Wazi system, along with web-based access to AAP to experiment with different playbook templates. These templates are imported into watsonx Orchestrate as skills and connected to your assistant.</p> <p>For more information on the AAP and Wazi z/OS environments, refer to this document. </p> <p>The playbook templates that are preinstalled in AAP cover various use cases, which you can explore, including:</p> <ul> <li>z/OS Certificate Management (create, delete, list, and renew certificates)</li> <li>dataset management (create, delete, fetch datasets)</li> <li>Submit JCL</li> <li>Run Operator commands</li> <li>Run TSO commands</li> <li>And more</li> </ul> <p>Each of the sections that follow build upon each other. Complete each to successfully enhance your assistant by starting with Explore Ansible Automation Platform.</p>"},{"location":"skills/importSkills/","title":"Import skills from Ansible Automation Platform","text":""},{"location":"skills/importSkills/#importing-skills-from-ansible-automation-platform","title":"Importing skills from Ansible Automation Platform","text":"<p>Now that you understand Ansible Automation Platform (AAP) and the preinstalled automations available, you can import them as skills into your watsonx Orchestrate instance, which is used for assistant guided actions.</p>"},{"location":"skills/importSkills/#import-skills-into-your-assistant","title":"Import skills into your assistant","text":"<p>The next steps assume that you have an active browser window to the watsonx Orchestrate ITZ cloud account. If you do not, refer to the initial steps in Creating an assistant and configuring conversational search.</p> <ol> <li> <p>Return to your watsonx Orchestrate instance and expand the main menu and click Skill studio. </p> <p></p> </li> <li> <p>Expand Create and click Import API.</p> <p></p> </li> <li> <p>Click the z/OS Skills accelerator (Trial) tile.</p> <p></p> </li> </ol> <p></p> <ol> <li> <p>Enter the following values in the z/OS Skills accelerator form and then click Connect.</p> <p>Use the URL, User Name, and Password values recorded in the Explore Ansible Automation Platform section earlier.</p> <p>a: Connection Type: <code>ansible</code></p> <p>b: Application Name: &lt;enter a meaningful name for the skills that you will import&gt; - record this name, you will need in the next section</p> <p>c: Connection URL: &lt;enter the URL for your AAP UI&gt;</p> <p>d: User Name: &lt;enter the AAP User Name (for UI access)&gt;</p> <p>e: Password: &lt;enter the AAP User Password&gt;</p> <p>f: Search Pattern: <code>*</code></p> <p></p> </li> <li> <p>Expand the Ansible Job Template Proj... folder.</p> <p>Explore the other available skills</p> <p>Take time to explore the available skills. There are many utility skills provided out of the box with the \u201cZ Skills Accelerator\u201d which are needed for actions such as retrieving the output of an Ansible skill. Consider importing these utility skills to enable more complete automation execution flows.</p> <p></p> </li> <li> <p>Click aap4zos.</p> <p></p> </li> <li> <p>Select the skills that you want to import into your application and then click Save as draft.</p> <p>For this lab, select the Z/os ping and Z/os gather facts skills.</p> <p></p> </li> <li> <p>Click the ellipses () for the first skill and select Enhance this skill.</p> <p></p> </li> <li> <p>Review the skill enhancement options and then click Publish.</p> <p>On the Enhance this skill page, you can specify enhancements to the default skill.  Refer to this documentation for more information on enhancing skills.</p> <p></p> </li> <li> <p>Repeat steps 8 and 9 for each skill you imported.</p> <p></p> </li> </ol> <p>The selected skills are now ready for use and available to your assistant. In the next section, learn how to connect them to your assistant.</p>"},{"location":"skills/importingzOSskills/","title":"Import pre-packaged z/OS skills","text":""},{"location":"skills/importingzOSskills/#importing-pre-packaged-zos-skills","title":"Importing pre-packaged z/OS skills","text":"<p>Provided with Version 2 of watsonx Assistant for Z is a set of pre-packaged skills. These skills are used to automate various tasks on z/OS, such as running different console commands and retrieving logs from batch jobs.</p> <p>The list of pre-packaged skills available include:</p> <ul> <li> <p>Authorized program list</p> </li> <li> <p>z/OS IPL Information</p> </li> <li> <p>Display zOS parmlib datasets</p> </li> <li> <p>UNIX System Services options</p> </li> <li> <p>Display zOS subsystems</p> </li> <li> <p>List spool files</p> </li> <li> <p>Retrieve dataset content</p> </li> <li> <p>Retrieve spool file content</p> </li> <li> <p>Retrieve z/OS Management Facility (OSMF) job status</p> </li> </ul> <p>IBM watsonx Orchestrate requires that any OSMF environment you connect to for skill execution has certificate authority (CA) signed certificates. </p> <p>As an example, the following are console commands that are used in some of the pre-packaged skills:</p> <ul> <li>Authorized Program list \u2013 <code>operator command -&gt; d prog,lnklist</code></li> <li>z/OS IPL Information - <code>operator command -&gt; d iplinfo</code></li> <li>Display zOS parmlib datasets - <code>operator command -&gt; d parmlib</code></li> </ul> <p>You can import the pre-packaged skills to your sandbox environment by downloading the compressed file here and following these instructions.</p> <p>Extract the embedded JSON file and modify the file for your environment by following these instructions.</p>"},{"location":"usecases/cert/cert/","title":"SSL certificate renewal","text":""},{"location":"usecases/cert/cert/#use-case-ssl-certificate-renewal-on-zos","title":"Use case: SSL Certificate renewal on z/OS","text":"<p>Now, shift roles to that of a mainframe Security Administrator (SA). The client want to understand how watsonx Assistant for Z can help them to verify that their critical security certificates are up to date and reduce the risk of expired certificates disrupting their organization\u2019s services. </p> <p>Secure Sockets Layer (SSL) certificates, often referred to as digital certificates, are used to establish an encrypted connection between communicating parties over a network. Certificate management is crucial for maintaining the security of a company\u2019s z/OS environment. The SA has not performed the tasks to manage and renew a certificate in some time. The SA recalls that there are many steps that are required on z/OS and various RACF commands that need to be run to renew a certificate. Rather than going to their senior SA for assistance, demonstrate how using watsonx Assistant for Z can help the SA automate the certificate renewal process. </p> <p>In this scenario, use the Ansible automation templates that are provided with AAP and the WAZI z/OS environment to create assistant actions. The actions guide the client through the process of identifying their SSL certificate\u2019s expiration dates, and automating the certificate renewal process for them. The assistant saves them time and improve their productivity.</p>"},{"location":"usecases/cert/cert/#create-an-initial-certificate-authority-ca-certificate-to-sign-future-site-certificates","title":"Create an initial certificate authority (CA) certificate to sign future SITE certificates","text":"<p>For this use case, a certificate authority (CA) certificate is needed to sign new SITE certificates. </p> <ol> <li> <p>Open and log in to the Ansible Automation Platform (AAP) web console. </p> <p>Don't remember how?</p> <p>Refer to the first 5 steps in Explore Ansible Automation Platform.</p> </li> <li> <p>Click Templates under the Resources section.</p> <p></p> </li> <li> <p>Click the launch icon () for the z/OS Certs - Create Cert template.</p> <p></p> </li> <li> <p>On the Survey screen, modify the Certificate Label and Type fields with the values that follow and then click Next. </p> <p>a: Certificate Label </p><pre><code>TESTCA\n</code></pre> <p>b: Type </p><pre><code>CERTAUTH\n</code></pre> <p>Leave the default values for all other fields.</p> <p> </p> </li> <li> <p>Click Launch.</p> <p> </p> </li> <li> <p>Review the output of the job.</p> <p>In the output of the playbook, notice that a new keyring is created, a certificate is created, and the certificate is connected to the key ring.</p> <p> </p> </li> <li> <p>Locate the line TASK [GENERATE new certificate], click the changed: [zos host].</p> <p> </p> </li> <li> <p>Click JSON.</p> <p> </p> </li> <li> <p>Review the RACDCERT command that was run to generate the certificate and then click x to close the window.</p> <p> </p> </li> </ol>"},{"location":"usecases/cert/cert/#create-an-expiring-certificate","title":"Create an expiring certificate","text":"<p>Now, create an expiring certificate that uses the CA certificate that you just created.</p> <ol> <li> <p>Return to the Templates tab and click the launch icon () for the z/OS Certs - Create Cert template.</p> <p> </p> </li> <li> <p>On the Survey screen, modify the fields that follow with the values specified and then click Next. </p> <p>a: Type </p><pre><code>SITE\n</code></pre> <p>b: Sign with </p><pre><code>CERTAUTH\n</code></pre> <p>c: Sign Label </p><pre><code>TESTCA\n</code></pre> <p>d: Common Name </p><pre><code>company.com\n</code></pre> <p>e: Expiration Date</p> <p>Enter a date that occurs within the next 30 days. The date must be in the format YYYY-MM-DD.</p> <p>Leave the default values for all other fields.</p> <p>Unlike the first certificate you created which was self-signed, this certificate will be signed by the local certificate authority that uses the CA you created.</p> <p>The following image does not highlight all the fields that need to be modified!</p> <p> </p> </li> <li> <p>Click Launch.</p> <p> </p> </li> <li> <p>Verify that the job was successful and inspect the output of the job.</p> <p> </p> </li> </ol>"},{"location":"usecases/cert/cert/#renew-the-expiring-certificate","title":"Renew the expiring certificate","text":"<p>Now that you have a certificate and it is expiring within 30 days, it is time to renew the certificate.</p> <ol> <li> <p>Return to the Templates tab and click the launch icon () for the z/OS Certs - Search and Renew template.</p> <p> </p> </li> <li> <p>On the Survey screen, modify the fields that follow with the values specified and then click Next.</p> <p>a: Certificate Label </p><pre><code>TESTSITE\n</code></pre> <p>b: Type </p><pre><code>SITE\n</code></pre> <p>c: Sign with </p><pre><code>CERTAUTH\n</code></pre> <p>d: Sign Label </p><pre><code>TESTCA\n</code></pre> <p>e: Expiration Date</p> <p>Specify a new expiration date in the format YYYY-MM-DD.</p> <p>The following image does not highlight all the fields that need to be modified!</p> <p> </p> </li> <li> <p>Click Launch.</p> <p> </p> </li> <li> <p>Verify that the job was Successful and review the output.</p> <p>Note: Click the Reload Output button to view the full output after the job completes.</p> <p>Review the tasks that were run within the automation to renew the certificate. Some of the steps completed include:</p> <ul> <li> <p>Run the RACF_CERTIFICATE_EXPIRATION z/OS Health Check</p> </li> <li> <p>Submit JCL to pull a report on the z/OS Health Check</p> </li> <li> <p>Search the output of the report for the given certificate label</p> </li> <li> <p>Print the expiring certificate, if it is found. You see: \u2018TESTSITE expiring \u2013 True\u2019</p> </li> <li> <p>If the certificate is expiring, start a series of RACDCERT commands to do the following:</p> <ul> <li> <p>Backup the expiring certificate</p> </li> <li> <p>Rekey the certificate and give it a new temporary label</p> </li> <li> <p>Generate a CSR for the new certificate</p> </li> <li> <p>Sign the new certificate with the local CA</p> </li> <li> <p>Delete the old certificate</p> </li> <li> <p>Relabel the new certificate to use the same label as before</p> </li> <li> <p>Refresh the digital certificate list</p> </li> </ul> </li> </ul> <p> </p> </li> </ol>"},{"location":"usecases/cert/cert/#create-another-expiring-certificate","title":"Create another expiring certificate","text":"<p>Create one more expiring certificate to use with the assistant and the new skills you will create.</p> <ol> <li> <p>Return to the Templates tab and click the launch icon () for the z/OS Certs - Create Cert template.</p> <p> </p> </li> <li> <p>On the Survey screen, modify the fields that follow with the values specified and then click Next.</p> <p>a: Certificate Label </p><pre><code>DEMOCERT\n</code></pre> <p>b: Type </p><pre><code>SITE\n</code></pre> <p>c: Sign with </p><pre><code>CERTAUTH\n</code></pre> <p>d: Sign Label </p><pre><code>TESTCA\n</code></pre> <p>e: Common Name </p><pre><code>company.com\n</code></pre> <p>f: Expiration Date</p> <p>Enter a date that falls within the next 30 days in the format YYYY-MM-DD.</p> <p>The following image does not highlight all the fields that need to be modified!</p> <p> </p> </li> <li> <p>Click Launch.</p> <p> </p> </li> <li> <p>Verify that the DEMOCERT was successfully created.</p> <p> </p> </li> </ol>"},{"location":"usecases/cert/cert/#import-the-ansible-automations-into-watsonx-orchestrate","title":"Import the Ansible automations into watsonx Orchestrate","text":"<p>For this use case, configure the assistant to guide the user through the process of identifying their SSL certificate\u2019s expiration date and automate the certificate renewal process. To do so, import the needed AAP templates into watsonx Orchestrate as skills.</p> <p>For this use case, the ansible templates you import are:</p> <ul> <li>z/OS Certs \u2013 List Cert</li> <li>z/OS Certs \u2013 Search and Renew</li> <li>Retrieve job output (utility skill)</li> </ul> <ol> <li> <p>Open Skill studio in watsonx Orchestrate.</p> <p></p> </li> <li> <p>Click Create and then click Import API.</p> <p></p> </li> <li> <p>Click the z/OS Skills accelerator (Trial) tile.</p> <p></p> </li> <li> <p>Enter the following values in the z/OS Skills accelerator form and then click Connect.</p> <p>Use the URL, User Name, and Password values recorded in the Explore Ansible Automation Platform section earlier.</p> <p>a: Connection Type:  </p><pre><code>ansible\n</code></pre> <p>b: Application Name:  </p><pre><code>certs\n</code></pre> <p>c: Connection URL: </p> <p>&lt;Enter the URL for your AAP UI&gt;</p> <p>d: User Name: </p> <p>&lt;Enter the AAP User Name (for UI access)&gt;</p> <p>e: Password:</p> <p>&lt;Enter the AAP User Password&gt;</p> <p>f: Search Pattern:  </p><pre><code>*\n</code></pre> <p></p> </li> <li> <p>Expand the Ansible Job Template Proj... folder and then click aap4zos.</p> <p></p> </li> <li> <p>Select Z/os certs - list cert and Z/os certs - search and renew and then click Save as draft.</p> <p>Scroll through the table of skills to find the required skills.</p> <p></p> </li> <li> <p>Click the ellipses () for the z/OS Certs - List Cert skill and select Enhance this skill.</p> <p></p> </li> <li> <p>Review the skill enhancement options and then click Publish.</p> <p></p> </li> <li> <p>Repeat steps 7 and 8 for the z/OS Certs - Search and Renew skill.</p> </li> <li> <p>Challenge: You also need to add the Retrieve job output utility to your certs app just like you did when creating the Gather Facts skill flow. Repeat steps 2 - 8 to add the Retrieve job output utility skill to your certs app. </p> </li> </ol>"},{"location":"usecases/cert/cert/#verify-all-the-skills-are-successfully-imported-and-create-the-app-connection","title":"Verify all the skills are successfully imported and create the app connection.","text":"<ol> <li> <p>Open Skill catalog in watsonx Orchestrate.</p> <p></p> </li> <li> <p>Enter certs in the search bar.</p> <p></p> </li> <li> <p>Click the certs tile.</p> <p></p> </li> <li> <p>Click Add skill + for each of the 3 skills in the certs app.</p> <p></p> </li> <li> <p>Click Connect app.</p> <p></p> </li> <li> <p>Enter your AAP Username and AAP Password and then click Connect app.</p> <p></p> </li> <li> <p>Verify that the app is connected.</p> <p></p> </li> </ol>"},{"location":"usecases/cert/cert/#connect-the-app-to-the-assistant","title":"Connect the app to the assistant.","text":"<ol> <li> <p>Open Skill catalog in watsonx Orchestrate.</p> <p></p> </li> <li> <p>Select the Draft version of your assistant and click Connections.</p> <p></p> </li> <li> <p>Enter certs in the search bar.</p> <p></p> </li> <li> <p>Click the ellipses () for the certs app and select Connect app*.</p> <p></p> </li> <li> <p>Click Connect app.</p> <p></p> </li> <li> <p>Enter your AAP Username and AAP Password and then click Connect app.</p> <p></p> </li> </ol>"},{"location":"usecases/cert/cert/#create-a-skill-flow-to-retrieve-certificate-expiration-dates","title":"Create a skill flow to retrieve certificate expiration dates.","text":"<p>The goal of this scenario is to configure the assistant to automate the certificate renewal process for the client. The first step in that process is to help the SA identify the expiration date of their z/OS certificate. You have imported the z/OS Certs \u2013 List Cert skill from Ansible Automation Platform. Next, create a new skill flow that uses the z/OS Certs \u2013 List Cert skill that can later be used in a natural conversation through assistant actions.</p> <p>First, create a skill flow to retrieve and display the expiration date of a z/OS certificate based on the certificate label the user provides.</p> <ol> <li> <p>Open Skill studio in watsonx Orchestrate.</p> <p> </p> </li> <li> <p>Click Create and then click Skill flow.</p> <p> </p> </li> <li> <p>Click the + icon.</p> <p> </p> </li> <li> <p>Click the certs app.</p> <p>Search on certs if you do not see the tile for your app.</p> <p></p> </li> <li> <p>Click Add Skill + in the z/OS Certs - List Cert tile.</p> <p></p> </li> <li> <p>Click the + icon below the z/OS Certs - List Cert skill and repeat steps 4 and 5 to add the Retrieve job output skill.</p> </li> <li> <p>Click the Retrieve job output skill.</p> <p></p> </li> <li> <p>Click the id field.</p> <p></p> </li> <li> <p>Click z/OS certs - List Cert.</p> <p></p> </li> <li> <p>Click job.</p> <p></p> </li> <li> <p>Click the z/OS Certs - List Cert tile.</p> <p></p> </li> <li> <p>On both the Input and Output tabs for the z/OS Certs - List Cert skill, enable the Hide this form from the user options.</p> <p>To enhance the user experience, hide the input and output forms from the user. This disables the List Cert skill form from being displayed. Rather than the user entering in their certificate details as input to the skill form, those details can be gathered into the skill through user prompts when creating an assistant action. This enables a more natural conversation flow when interacting with the assistant.</p> <p></p> </li> <li> <p>Repeat step 12 for the Output of the Retrieve job output skill.</p> <p></p> </li> </ol> <p>The output of the List Cert skill includes a large amount of data. In the assistant, only the certificate expiration date is needed. In the next steps, transform the output to return only the certificate expiration date.</p> <ol> <li> <p>Click the + icon below the Retrieve job output skill.</p> <p></p> </li> <li> <p>Click the Custom forms.</p> <p></p> </li> <li> <p>Click Add skill + in the Input form.</p> <p></p> </li> <li> <p>Click the Input form skill.</p> <p></p> </li> <li> <p>Click Add input field +.</p> <p></p> </li> <li> <p>Click Paragraph text and then click Next.</p> <p></p> </li> <li> <p>Enter <code>certificate expiration date</code> in the Display label field and click Apply.</p> <p>Display label: </p><pre><code>certificate expiration date\n</code></pre> <p></p> </li> <li> <p>Click the certificate expiration date entry field.</p> <p></p> </li> <li> <p>In the Mapping data for \"certificate expiration data\" section, click Retrieve job output.</p> <p></p> </li> <li> <p>Click content.</p> <p></p> </li> <li> <p>Click Add transformation +.</p> <p>A transformation is used to extract the certificate expiration date from all the job output data.</p> <p></p> </li> <li> <p>Click the Select drop-down and select Get substring by regular expression.</p> <p></p> </li> <li> <p>Cut and paste the regular express that follows to extract the certificate end date and then click Add.</p> <p>Regular Expression: </p><pre><code>(?&lt;=End Date: ).[^\"]*\n</code></pre> <p>Note</p> <p>There are several ways to transform data to match the type of output you need. In the above example, regular expression is used to get the needed output (the certificate expiration date). This regular expression was tested against the output of the z/OS Certs \u2013 List Cert Ansible job to extract the value assigned to the \u2018End Date\u2019 field in the job\u2019s output. After completing this use case, you can experiment with other regular expressions to extract additional information from the job\u2019s output. </p> <p>For more information on transforming data within watsonx Orchestrate, review the documentation found here.</p> <p></p> </li> <li> <p>Enter <code>certificate expiration date</code> in the form title and toggle the Hide this form from the user option.</p> <p>Form title: </p><pre><code>certificate expiration date\n</code></pre> <p></p> </li> </ol> <p>Next, create an output for to return the transformed data from the input skill.</p> <ol> <li> <p>Click the + icon below the Input form.</p> <p></p> </li> <li> <p>Click Custom forms.</p> <p></p> </li> <li> <p>Click Add Skill + in the Output form tile.</p> <p></p> </li> <li> <p>Click the Output form skill.</p> <p></p> </li> <li> <p>Click in the Custom forms field and enter <code>#</code> (the pound key, also know as the number sign or hash key).</p> <p>Typing the <code>#</code> opens a new dialog window.</p> <p></p> </li> <li> <p>Expand (a) Input form, select (b) certificate expiration date, and then click (c) OK.</p> <p></p> </li> <li> <p>Enable the Hide this form from the user option.</p> <p>Why hide some of the forms?</p> <p>You may be wondering why hide the input and output forms for the skills in the skill flow. This is done to execute the automation based on user prompts for the inputs of the skills. This is done through natural conversation with the assistant when the skill flow is configured as an assistant \u2018action\u2019 (you will do this soon). Although the final output is hidden, it is accessible as a variable in a custom-built action. The value can be displayed exactly at the point it is expected in the conversation.</p> <p></p> </li> <li> <p>Click the pencil icon ().</p> <p></p> </li> <li> <p>Enter <code>Retrieve certificate expiration</code> in the Name field and click Save.</p> <p>Name: </p><pre><code>Retrieve certificate expiration\n</code></pre> <p></p> </li> <li> <p>Click Actions and then click Save as draft.</p> <p></p> </li> <li> <p>Click Actions and then click Enhance.</p> <p></p> </li> <li> <p>Review the skill flow settings and click Publish.</p> <p></p> </li> </ol> <p>You created a new skill flow that accomplishes part of the use case \u2013 retrieving and displaying the expiration date of a z/OS certificate based on the certificate label the user provides.</p> <p>In the next section, you will create a simpler skill flow for the z/OS Certs \u2013 Search and Renew skill that you previously imported. After this additional skill flow is created, add both skill flows as skill-based actions to be called in a custom-built action that maps inputs to the skill flows through natural conversation.</p>"},{"location":"usecases/cert/cert/#create-a-skill-flow-for-certificate-renewal","title":"Create a skill flow for certificate renewal","text":"<p>The final step before configuring the assistant with actions is to create a skill flow for renewing certificates. Recall the z/OS Certs \u2013 Search and Renew automation imported the from Ansible Automation Platform earlier. The skill flow that you create next is composed of that single skill. There is no need to return the output. After the automation is triggered, the user can verify the new expiration date by running the retrieve certificate expiration date flow.</p> <ol> <li> <p>In Skill studio, click Create and then click Skill flow.</p> <p></p> </li> <li> <p>Click the + icon.</p> <p> </p> </li> <li> <p>Click the certs app.</p> <p>Search on certs if you do not see the tile for your app.</p> <p></p> </li> <li> <p>Click Add Skill + in the z/OS Certs - Search and Renew tile.</p> <p></p> </li> </ol> <p>As mentioned, there is no need to return the Ansible job output of this skill when it is run. The z/OS Certs - Search and Renew is used to set default values for some of the inputs. In this use case, assume that the SA will be renewing their SITE certificates that are signed with a previously generated certificate authority.</p> <ol> <li> <p>Click the z/OS Certs - Search and Renew skill.</p> <p></p> </li> <li> <p>Click Input.</p> <p></p> </li> <li> <p>Hover over the extra_vars.cert_type_survey input field and click the pencil icon ().</p> <p></p> </li> <li> <p>Click in the extra_vars.cert_type_survey input field and enter <code>SITE</code>.</p> <p>extra_vars.cert_type_survey: </p><pre><code>SITE\n</code></pre> <p>Do not enter spaces before or after the word <code>SITE</code>.</p> <p></p> </li> <li> <p>Repeat 7 and 8 for the extra_vars.sign_with_survey field and enter the word <code>CERTAUTH</code>.</p> <p>extra_vars.sign_with_survey: </p><pre><code>CERTAUTH\n</code></pre> <p>Do not enter spaces before or after the word <code>CERTAUTH</code>.</p> <p></p> </li> <li> <p>Enable the Hide this form from the user option for both the Input and Output forms.</p> <p>The image that follows only shows the Output form, but enable the option for both forms.</p> <p></p> </li> <li> <p>Click (a) the pencil icon () for the skill flow, enter (b) <code>Cert Renewal skill flow</code> in the Name field, and click (c) Save.</p> <p>Name:  </p><pre><code>Cert Renewal skill flow\n</code></pre> <p></p> </li> <li> <p>Click Actions and then click Save as draft.</p> <p></p> </li> <li> <p>Click Actions and then click Enhance.</p> <p></p> </li> <li> <p>Review the skill flow settings and click Publish.</p> <p></p> </li> </ol>"},{"location":"usecases/cert/cert/#add-the-skill-flows-to-the-assistant","title":"Add the skill flows to the assistant","text":"<p>Next, create 2 skill-based actions that use the skill flows. The skill-based actions enable the ability to call the skill flow as a subaction within a new custom-built action. For this use case, create two skill-based actions that use the previously created skill flows:</p> <ul> <li> <p>Retrieve certificate expiration \u2013 maps the user prompted certificate label as input and extracts the certificate expiration date from the Ansible job\u2019s output.</p> </li> <li> <p>Cert Renewal skill flow \u2013 maps the user prompted certificate label and new expiration date as input and runs the Search and Renew Ansible job to extend the expiration date of the certificate.</p> </li> </ul> <p>After the 2 skill flows are added as skill-based actions, integrate the actions into a custom-built action that defines the entire conversation flow. The flow assists the SA with the certificate renewal process.</p> <ol> <li> <p>Open AI assistant builder in watsonx Orchestrate.</p> <p></p> </li> <li> <p>Click Actions.</p> <p></p> </li> <li> <p>Click New action+.</p> <p></p> </li> <li> <p>Click Skill-based action.</p> <p></p> </li> <li> <p>Click the Retrieve certificate expiration tile and then click Next.</p> <p></p> </li> <li> <p>Click Cancel on the New action dialog.</p> <p>For this use case, the action is triggered from a custom-built action. To prevent the skill flow from being run as the skill-based action, do not enter any example phrases.</p> <p></p> </li> <li> <p>Click x to close the Retrieve certificate expiration skill.</p> <p></p> </li> <li> <p>Repeat steps 3 - 7 to create a skill-based action for the Cert Renewal skill flow.</p> <p>This action is also triggered from a custom-built action. Do not enter any example phrases.</p> </li> <li> <p>Verify that both skill-based actions are available.</p> <p></p> </li> </ol>"},{"location":"usecases/cert/cert/#create-a-custom-built-action-for-ssl-certificate-renewal","title":"Create a custom-built action for SSL Certificate Renewal","text":"<p>Next, create a custom-built action that runs the new skill-based actions as subactions. Configure the custom-built action to enable a natural conversation with the assistant, gather relevant details from the user, and map those details to the action inputs. </p> <ol> <li> <p>Click New action +.</p> <p></p> </li> <li> <p>Click Custom-built-action.</p> <p></p> </li> <li> <p>Enter <code>z/OS certificate expires soon</code> and then click Save.</p> <p>What does your customer say to start this interaction: </p><pre><code>z/OS certificate expires soon\n</code></pre> <p></p> </li> </ol> <p>The conversational search capability that is provided by watsonx Assistant for Z can provide step-by-step guidance for determining certificate expiration and renewing certificates, and is grounded on Z domain-specific knowledge. In the first step to be taken when the user prompts the assistant with <code>z/OS certificate expires soon</code>, configure the assistant to use conversational search to provide a response on the process and the ability to automate the process.</p> <ol> <li> <p>Click the And then drop down and select Search for the answer.</p> <p></p> </li> </ol> <p>The result is that anytime the user input matches the example phrase <code>z/OS certificate expires soon</code>, the first step that is taken is for the assistant to use conversational search and provide a response to their original question.</p> <p>Like in the IPL Information scenario, add a custom search query so when conversational search is run in the first conversation step, the query used is hardcoded and not what the user input.</p> <ol> <li> <p>Click Edit settings.</p> <p></p> </li> <li> <p>Enter the following prompt to be used in the Custom search query field and then click Apply.</p> <p>Custom search query: </p><pre><code>My z/OS certificate is going to expire soon. How do I retrieve the expiration date for my certificate?\n</code></pre> <p></p> </li> <li> <p>Click Next step+.</p> <p></p> </li> <li> <p>Enter the following response in the Assistant says field.</p> <p>Assistant says: </p><pre><code>Would you like to run the skill to retrieve your certificate\u2019s expiration date?\n</code></pre> <p></p> </li> <li> <p>Click the Define customer response option list and select Confirmation.</p> <p>The Confirmation option prompts the user to select <code>Yes</code> or <code>No</code>.</p> <p></p> </li> <li> <p>Click Next step +.</p> <p></p> </li> <li> <p>Click the Is taken option list and select with conditions.</p> <p>This step handles the flow when the user selects <code>Yes</code> in the previous step, indicating that they want to run the skill to retrieve the certificate\u2019s expiration date. To run the Retrieve certificate expiration action created earlier, the assistant  needs the certificate label. This label is mapped as input to the skill.</p> <p></p> </li> <li> <p>Enter the following text in the Assistant says field.</p> <p>Assistant says: </p><pre><code>What is your certificate label?\n</code></pre> <p></p> </li> <li> <p>Click the Define customer response drop-down list and select Free text.</p> <p></p> </li> <li> <p>Click Next step+.</p> <p></p> </li> <li> <p>Click the Is taken option list and select with conditions.</p> <p>After the user enters the certificate label as free text, the next step is to run the Retrieve certificate expiration skill-based action created earlier. To do so, map the user input to the skill flow and retrieve the expiration date for that certificate.</p> <p></p> </li> <li> <p>Click the And then option list and click Go to a subaction.</p> <p>Notice that the default condition validates the free text is defined from the previous step.</p> <p></p> </li> <li> <p>Click the (a) Go to option list, select the (b) Retrieve certificate expiration skill-based action, and then click (c) Apply.</p> <p></p> </li> <li> <p>Click Edit passed values.</p> <p>To run the Retrieve certificate expiration subaction that uses the users certificate label, the passed value needs to be modified.</p> <p></p> </li> <li> <p>Click Set new value + and then select extra_vars.cert_label_survey.</p> <p></p> </li> <li> <p>In the To field, select Action step variables, and then select What is your certificate label?.</p> <p></p> </li> <li> <p>Click Apply.</p> <p></p> </li> <li> <p>Click Next step +.</p> <p></p> </li> <li> <p>Click the Is taken option list and select with conditions.</p> <p>In the previous step, you configured the assistant to run the Retrieve certificate expiration subaction you created, passing the certificate label the user inputted to the skills inputs. Recall when the Retrieve certificate expiration skill flow was created, the output form at the end of the skill flow was hidden. That form contained the expiration date. As a result, nothing is returned when running the subaction in the previous step. Now, configure the custom-action to provide that output as a response.</p> <p></p> </li> <li> <p>Enter the following text in the Assistant says field.</p> <p>Assistant says: </p><pre><code>Below is your certificate\u2019s expiration date:\n</code></pre> <p></p> </li> <li> <p>While still in the Assistant says field, press return and then type <code>$</code>.</p> <p>The <code>$</code> is a special key that lists available functions. The following image is edited to show that you must type the <code>$</code>, but it is not displayed on your screen.</p> <p></p> </li> <li> <p>Click Retrieve certificate expiration (step 4) and then click Retrieve certificate expiration result variable.</p> <p></p> </li> <li> <p>Review the Assistant says field and then click Save ().</p> <p></p> </li> </ol>"},{"location":"usecases/cert/cert/#test-the-zos-certificate-expires-soon-custom-built-skill","title":"Test the z/OS certificate expires soon custom-built skill","text":"<p>Before completing the use case, test the z/OS certificate expires soon custom-built skill that uses the DEMOCERT certificate created earlier.</p> <ol> <li> <p>Click Preview.</p> <p></p> </li> <li> <p>Enter the following prompt in the preview.</p> <p>Prompt: </p><pre><code>My z/OS certificate is going to expire soon. How do I retrieve the expiration date for my certificate?\n</code></pre> </li> <li> <p>Review the response and click Yes.</p> <p>The assistant responds by calling Conversational search and returns a response by using the Z RAG, displaying the RACDCERT command that can be used. The assistant then prompts <code>Would you like to run the skill to retrieve?</code>.</p> <p></p> </li> <li> <p>Review the response and enter <code>DEMOCRT</code>.</p> <p>Prompt: </p><pre><code>DEMOCRT\n</code></pre> <p></p> </li> <li> <p>Click Apply.</p> <p></p> </li> <li> <p>Review the response.</p> <p>If you see the following response (the date may differ), the custom-built skill ran successfully. The output of the skill flow was not the entire output of the z/OS Certs \u2013 List Cert Ansible job, but rather the certificate expiration date that was extracted from the full job output by using the Regular Expression transformation. </p> </li> </ol>"},{"location":"usecases/cert/cert/#complete-the-custom-built-skill-to-renew-the-certificate","title":"Complete the custom-built skill to renew the certificate","text":"<p>Now that the custom-built action is working, add steps to include the certificate renewal process. After retrieving and displaying the user\u2019s certificate expiration date, ask the user if they want to renew the certificate, and if so, prompt for the new date and renew the certificate.</p> <ol> <li> <p>Click Next step +.</p> <p></p> </li> <li> <p>Click the Is taken option list and select with conditions.</p> <p></p> </li> <li> <p>Enter the following text in the Assistant says field.</p> <p>Assistant says: </p><pre><code>Would you like to renew your certificate?\n</code></pre> <p></p> </li> <li> <p>Click the Define customer response option list and select Confirmation.</p> <p></p> </li> <li> <p>Click Next step +.</p> <p></p> </li> <li> <p>Click the Is taken option list and select with conditions.</p> <p>This step handles the flow in which the user selects <code>Yes</code> in the previous step indicating they want to renew their expiring certificate. Before initiating the Cert Renewal skill flow action to automate this, the assistant first needs the new expiration date for the certificate.</p> <p> </p> </li> <li> <p>Enter the following text in the Assistant says field.</p> <p>Assistant says:  </p><pre><code>What date would you like to set the renewed certificate\u2019s expiration date to? Please enter in the form of YYYY-MM-DD.\n</code></pre> <p></p> </li> <li> <p>Click the Define customer response option list and select Free text.</p> <p></p> </li> <li> <p>Click New step +.</p> <p></p> </li> <li> <p>Click the Is taken option list and select with conditions.</p> <p>With the new expiration date entered by the user, the next step is to run the Cert Renewal skill flow action as a subaction. Next, trigger the renewal skill flow and pass the user provided details as input to the action to renew the certificate and extend the certificates expiration date.</p> <p></p> </li> <li> <p>Enter the following text in the Assistant says field.</p> <p>This assistant first responds with the message that follows before triggering the certificate renewal skill-flow. When performing a demo of this use case, mention the z/OS Certs \u2013 Search and Renew Ansible playbook typically takes a minute or so to complete. </p> <p>Assistant says:  </p><pre><code>Renewing your certificate\u2026this could take up to a minute. Please wait one minute before selecting an option below.\n</code></pre> <p></p> </li> <li> <p>Click the And then option list and select Go to a subaction.</p> <p></p> </li> <li> <p>Click the Go to option list and select the Cert Renewal skill flow.</p> <p></p> </li> <li> <p>Click Apply.</p> <p></p> </li> <li> <p>Click Edit passed values.</p> <p>Edit the passed values to use them in the Cert Renewal skill flow subaction.</p> <p></p> </li> <li> <p>Click Set new value + and then select extra_vars.cert_label_survey.</p> <p></p> </li> <li> <p>In the To field, select Action step variables.</p> <p></p> </li> <li> <p>Click What is your certificate label?</p> <p></p> </li> <li> <p>Repeat steps 16 - 18 adding the extra_vars.new_expiry-date_survey input variable and What date would you like to set the... in the To field.</p> <p></p> </li> <li> <p>Click Set new value + and then select extra_vars.sign_label_survey.</p> <p></p> </li> <li> <p>In the To option list, select Enter text.</p> <p></p> </li> <li> <p>Enter <code>TESTCA</code> in the Enter text field and click Apply for the To option list.</p> <p>Enter text: </p><pre><code>TESTCA\n</code></pre> <p>For this passed value, hardcode <code>TESTCA</code> in the skill flow\u2019s input for the sign_label variable. This is the CA certificate created earlier for demo purposes in the AAP web console.</p> <p></p> </li> <li> <p>Review the Edit passed values and then click Apply.</p> <p>Review all 3 variables are set correctly.</p> <p></p> </li> <li> <p>Click Next step +</p> <p></p> </li> <li> <p>Click the Is taken option list and select with conditions.</p> <p>To complete the flow, ask the user if they want to verify the new expiration date.</p> <p></p> </li> <li> <p>Enter the text that follows in the Assistant says field.</p> <p>Assistant says: </p><pre><code>Would you like to verify the new expiration date for your certificate?\n</code></pre> <p></p> </li> <li> <p>Click the Define customer response option list and select Confirmation.</p> <p></p> </li> <li> <p>Click Next step +.</p> <p></p> </li> <li> <p>Click the Is taken option list and select with conditions.</p> <p>On the condition that the user selected <code>Yes</code> in the previous step, configure a step to run the Retrieve certificate expiration skill-flow again to retrieve and display the new expiration date of the renewed certificate.</p> <p></p> </li> <li> <p>Click the And then option list and select Go to a subaction.</p> <p></p> </li> <li> <p>Click the (a) Go to option list, select (b) Retrieve certificate expiration, and then click (c) Apply.</p> <p></p> </li> <li> <p>Click Edit passed values.</p> <p></p> </li> <li> <p>Click Set new value + and then select extra_vars.cert_label_survey.</p> <p></p> </li> <li> <p>In the To option list, click Action step variables.</p> <p></p> </li> <li> <p>Click What is your certificate label?.</p> <p></p> </li> <li> <p>Review the Edit variable values and click Apply.</p> <p></p> </li> <li> <p>Click Next step +.</p> <p></p> </li> <li> <p>Click the Is taken option list and select with conditions.</p> <p>The final step is to display new expiration date of the certificate. Nothing is returned in the previous step when running the Retrieve certificate expiration skill flow - this was because the output form was hidden when the skill was created. In this step, provide the output as an assistant response to the user, with only the expiration date extracted from the full job output.</p> <p></p> </li> <li> <p>Enter the following text in the Assistant says field.</p> <p>Assistant says: </p><pre><code>Below is the new expiration date of your renewed certificate:\n</code></pre> <p></p> </li> <li> <p>While still in the Assistant says field, press return and then type <code>$</code>.</p> <p>The <code>$</code> is a special key that lists available functions. The following image is edited to show that you must type the <code>$</code>, but it is not displayed on your screen.</p> <p></p> </li> <li> <p>Click Retrieve certificate expiration (step 10).</p> <p>Be sure to select the output from step 10 and not step 4.</p> <p></p> </li> <li> <p>Click Retrieve certificate expiration result variable.</p> <p></p> </li> <li> <p>Click the And then option list and select End the action.</p> <p></p> </li> <li> <p>Review the (a) final step, click (b) Save (), and then click (c) x.</p> <p></p> </li> </ol>"},{"location":"usecases/cert/cert/#run-the-complete-custom-built-action","title":"Run the complete custom-built action","text":"<p>The custom-built action is now complete and can be demonstrated to the SA for this use case. In demonstrating the ability to infuse Ansible automations into a natural conversation, the SA is able to see the value that watsonx Assistant for Z can provide in helping them improve productivity and remove the need to go to their senior colleagues for assistance.</p> <ol> <li> <p>Open Preview in the Ai assistant builder.</p> <p></p> </li> <li> <p>Enter the following text in the assistant.</p> <p>Prompt: </p><pre><code>How do I check the expiration date for my certificate that\u2019s expiring soon?\n</code></pre> <p>Use the Change layout option to open a full page view of the assistant.</p> <p> </p> </li> <li> <p>Review the response and click Yes.</p> <p>The assistant responds with conversational search, providing a content-grounded answer based on IBM Z documentation. The response includes a RACF command that the SA might use to determine their certificate\u2019s expiration date.</p> <p>Following the response, the assistant prompts the user if they want to run the skill to retrieve a certificate\u2019s expiration date.</p> <p></p> </li> <li> <p>Enter <code>DEMOCERT</code> after the assistant responds with What is your certificate label?</p> <p>Prompt: </p><pre><code>DEMOCERT\n</code></pre> <p></p> </li> <li> <p>Wait 10 seconds and then click Apply.</p> <p> </p> </li> <li> <p>Review the response and then click Yes.</p> <p>By providing the automation within the assistant conversation, it makes it very quick for the SA to identify the certificate\u2019s expiration date. In addition to providing this valuable information, the assistant is configured with another automation to renew the certificate if they choose to do so.</p> <p>The expiration date you see may differ from the image that follows.</p> <p></p> </li> <li> <p>Enter a date in the future in the format YYYY-MM-DD.</p> <p></p> </li> <li> <p>Review the response, wait 30 seconds to a minute, and then click Yes.</p> <p>It is crucial that you wait 30 seconds to a minute before selecting Yes.</p> <p>This is because in the background, your z/OS Certs \u2013 Search and Renew automation is running within AAP (which you can verify within the AAP Web console). This is mapping the user-inputted expiration date as well as the original certificate label provided by the end-user to the inputs of this AAP automation.\"</p> <p></p> </li> <li> <p>Wait 10 seconds and then click Apply.</p> <p></p> </li> <li> <p>Review the response.</p> <p>The response should match the date that is entered in step 7.</p> <p> </p> </li> </ol> <p>In the demo, the SA receives immediate guidance on identifying the certificate expiration date via RACF commands. The SA runs automation that is proposed by the assistant to retrieve the certificate information. Also, because the assistant is configured with step-by-step conversation flows, it is possible to add other prompts within the conversation. For example, proposing the automation of renewing the certificate on their behalf. By doing so, the SA is able to reduce the time it takes to complete this routine task.</p> <p>Recall how many steps were involved in the Ansible template for z/OS Certs \u2013 Search and Renew. By automating these tasks with Ansible, the System Administrator streamlines the entire process and ensures that their critical certificates are up to date and reduce the risk of expired certificates disrupting their business services.</p>"},{"location":"usecases/cert/certPH/","title":"COMING SOON!","text":""},{"location":"usecases/cert/certPH/#coming-soon","title":"COMING SOON!","text":""},{"location":"usecases/ipl/ipl/","title":"Retrieve IPL information","text":""},{"location":"usecases/ipl/ipl/#use-case-retrieve-ipl-information","title":"Use case: Retrieve IPL information","text":"<p>Next, explore a use case to improve productivity for early-tenure system programmers (SysProg) who are preparing for an upcoming initial program load (IPL) for a logical partition (LPAR).</p> <p>To prepare for the IPL, the SysProgs need to familiarize themselves with the process. Rather than spending time reading through the wide array of documentation available online, they would like to use watsonx Assistant for Z. The content-grounded capabilities that are provided by watsonx Assistant for Z return accurate responses to their questions quickly and uses automations to perform actions.</p> <p>As part of the pilot, they already explored prompting the assistant with questions. In one example prompt, they asked the assistant is \u201cWhat information is needed to perform an IPL on a z/OS LPAR?\u201d In reading the response, the SysProg learns they need information about their system in preparation for the IPL. For example, the IPL Volume and the IPL LOAD PARM.</p> <p>For this use case, show how a simple automation for retrieving this type of information can be infused in a natural conversation with watsonx Assistant for Z. You use pre-packaged skills to automate various tasks on z/OS. The pre-packaged skills are provided as an OpenAPI JSON file. Learn more about OpenAPI here. The file includes skill definitions that can be uploaded to the Skill Studio within watsonx Orchestrate to import the pre-packaged skills. First, the file must first be customized for your z/OS server.</p> <p>The list of pre-packaged skills available include:</p> <ul> <li>Authorized program list</li> <li>z/OS IPL Information</li> <li>Display zOS parmlib datasets</li> <li>Unix System services options</li> <li>Display zOS subsystems</li> <li>List spool files</li> <li>Retrieve dataset content</li> <li>Retrieve spool file content</li> <li>Retrieve z/OS Management facility (z/OSMF) job status</li> </ul> <p>A great value of watsonx Orchestrate is the ability to build skills that anyone can use. You can build your own custom skills by importing an OpenAPI file into watsonx Orchestrate as a JSON or YAML file. For more information on building skills by importing OpenAPI files, refer to the documentation here.</p> <p>Watsonx Orchestrate also makes it possible to build, edit, and generate OpenAPI specifications by using the OpenAPI builder. With the OpenAPI Builder, you can use the AI function to simplify the process of generating these specifications. For more information on using the OpenAPI Builder, refer to the documentation here.</p> <p>For this use case, you are importing the skill for retrieving a z/OS server\u2019s IPL information. The next steps walk you through the process of downloading that OpenAPI JSON file and customizing it for your environment.</p>"},{"location":"usecases/ipl/ipl/#download-and-customize-the-watsonx-assistant-for-z-openap-json-file","title":"Download and customize the watsonx Assistant for Z OpenAP JSON file","text":"<ol> <li> <p>Download the watsonx Assistant for Z OpenAP JSON file.</p> <p>wxa4z-skillpak-prepackaged-skills.json.zip</p> </li> <li> <p>Extract the file.</p> </li> <li> <p>In a text editor, open the <code>wxa4z-skillpak-prepackaged-skills.json</code>, modify the server's url field as described, and save the file.</p> <p>File name:  </p><pre><code>wxa4z-skillpak-prepackaged-skills.json\n</code></pre> <p>Substitute your Wazi as a Service (WaaS) instance URL for the string <code>&lt;your z/OSMV URL&gt;</code>. Your WaaS URL is based on your ITZ AAP URL that can be obtained from your watsonx Assistant for Z Pilot - AAP &amp; z/OS ITZ reservation.</p> <p>The AAP URL is similar to:</p> <p><code>https://itzvsi-aap-ppxbcno.techzone.ibm.com</code></p> <p>Change the <code>aap</code> string to <code>zos</code> and append <code>:10443</code> to the URL value. Record this value for later use! Your new URL is similar to:</p> <p><code>https://itzvsi-zis-ppxbcno.techzone.ibm.com:10443</code></p> <p>Before:</p> <p></p> <p>After:</p> <p></p> <p>In watsonx Orchestrate, each app is associated with a single URL.</p> <p>If you have not imported previous skills into an app called <code>z/OS operations</code>, the default values in the info section are fine. If you already have a app named \"z/OS operations\", modify the info section to meet your needs.</p> <p>For more information on modifying the OpenAPI JSON file, see the instructions here.</p> </li> </ol>"},{"location":"usecases/ipl/ipl/#set-the-racf-passphrase-for-zosmf-authentication","title":"Set the RACF passphrase for z/OSMF authentication","text":"<p>For your skills to run successfully on your WaaS instance, you need to ensure that you can authenticate to it from watsonx Orchestrate. To achieve successful authentication, setup a new RACF Passphrase for the <code>IBMUSER</code> ID that is a pre-defined user ID on the WaaS server. The following steps take you through the steps of setting a new passphrase for your user and verifying access.</p> <ol> <li> <p>Open and log in to the Ansible Automation Platform (AAP) web console. </p> <p>Don't remember how?</p> <p>Refer to the first 5 steps in Explore Ansible Automation Platform.</p> </li> <li> <p>Click Templates under the Resources section.</p> <p></p> </li> <li> <p>Click the launch icon () for the z/OS TSO Command(s) template.</p> <p></p> </li> <li> <p>Replace the default command with the text that follows and substituting a password of your choosing for the string <code>YOUR PASSWORD PHRASE</code> and then click Next.</p> <pre><code>ALTUSER IBMUSER PHRASE('YOUR PASSWORD PHRASE') NOEXPIRE RESUME\n</code></pre> <p>Avoid typographical errors later... keep the password simple.</p> <p>If you type the command yourself, be sure to include the single quotes before and after the password. Record the password as it will be needed later. We will refer to this as your WaaS password.\"</p> <p></p> </li> <li> <p>Click Launch.</p> <p></p> </li> <li> <p>Verify that the job is Successful by locating the message <code>\"failed\": false</code> in the job output.</p> <p></p> </li> <li> <p>Verify that you can log in to z/OSMF in a new browser tab.</p> <p>Use the WaaZ URL created earlier and append <code>/zosmf</code> to the string. The URL is similar to: <code>https://itzvsi-zos-pwgabob.techzone.ibm.com:10443/zosmf</code>.</p> <p></p> <p>Accept any connection not private messages to open the page.</p> </li> <li> <p>Enter (a) <code>IBMUSER</code> for the z/OS USER ID, (b) the password you specified in step 4 for the z/OS PASSWORD, and then (c) click LOG IN.</p> <p></p> </li> <li> <p>Close the new browser tab after verifying a screen similar to the image that follows is displayed.</p> <p></p> </li> </ol>"},{"location":"usecases/ipl/ipl/#import-and-publish-the-pre-packaged-skills-as-an-openapi-file","title":"Import and publish the pre-packaged skills as an OpenAPI file","text":"<ol> <li> <p>Open Skills studio in watsonx Orchestrate.</p> <p></p> </li> <li> <p>Click Create and then click Import API.</p> <p></p> </li> <li> <p>Click From a file.</p> <p></p> </li> <li> <p>Click Drag and drop files here or click to upload in the Import a skill file window.</p> <p></p> </li> <li> <p>Locate and select the JSON file that you modified earlier and then click Upload.</p> <p></p> </li> <li> <p>Verify that you receive the message The Open file or skill package is good to go! and then click Next.</p> <p></p> <p>Not good to go?</p> <p>If the file does not load properly you will need to verify not formatting or errors were made in your json file. Return to the previous section to verify the file contents and then reload the JSON file.</p> </li> <li> <p>Select the z/OS IPL Information skill and then click Add.</p> <p>Note: Only the z/OS IPL Information skill is required for this use case, but you can add as many skills as you like for testing purposes.</p> <p></p> </li> <li> <p>Click the ellipses icon (~) for the z/OS IPL Information skill and then click Enhance this skill.</p> <p></p> </li> <li> <p>Review the skill enhancements options and then click Publish.</p> <p></p> </li> <li> <p>If you added other skills in step 7, repeat the previous 2 steps for each skill added.</p> </li> </ol>"},{"location":"usecases/ipl/ipl/#configure-your-appurl-to-connect-to-the-waas-server","title":"Configure your appURL to connect to the WaaS server","text":"<ol> <li> <p>In Skill studio, click the Apps tab.</p> <p></p> </li> <li> <p>In the search field, enter the name of the application in the search field. Unless you modified the <code>info</code> section of the JSON file, the default name is z/OS operations.</p> <p></p> </li> <li> <p>Click the ellipses icon (~) for the z/OS Operations and then click Edit.</p> <p></p> </li> <li> <p>Click the Configuration tab.</p> <p></p> </li> <li> <p>Click Test connection.</p> <p>Note: the Server URL field must match the URL you created for your WaaS server. It is similar to: <code>https://itzvsi-zos-pwgabob.techzone.ibm.com:10443</code>.</p> <p> </p> </li> <li> <p>Enter (a) <code>IBMUSER</code> in the username field, (b) your WaaS password created earlier in the password field, and then (c) click Connect app.</p> <p> </p> </li> <li> <p>Verify that the connection is successful and then click Save.</p> <p> </p> </li> <li> <p>Repeat step 2 above to verify that the Configuration status is Configured.</p> <p> </p> </li> </ol>"},{"location":"usecases/ipl/ipl/#test-the-skill","title":"Test the skill","text":"<ol> <li> <p>Open Chat in watsonx Orchestrate.</p> <p></p> </li> <li> <p>Click Add skills from the catalog.</p> <p></p> </li> <li> <p>In the search apps field, enter the name of the application. Unless you modified the <code>info</code> section of the JSON file, the default name is z/OS operations.</p> <p></p> </li> <li> <p>Locate and click the tile for your app (z/OS operations).</p> <p></p> </li> <li> <p>Click Add skill + for the z/OS IPL Information skill.</p> <p></p> </li> <li> <p>Repeat step 5 for any additional skills you added to the app.</p> </li> <li> <p>Click Connect app.</p> <p></p> </li> <li> <p>Enter (a) <code>IBMUSER</code> in the username field, (b) your WaaS password created earlier in the password field, and then (c) click Connect app.</p> <p></p> </li> <li> <p>Verify that the skill is connected.</p> <p></p> </li> <li> <p>Open Chat in watsonx Orchestrate.</p> <p></p> </li> <li> <p>Click the z/OS IPL Information tile.</p> <p></p> <p>The name of the tile may be different.</p> <p>If you added multiple skills to your app, the tile name may be z/OS operations and the number of skills included will be shown.</p> </li> <li> <p>Using the defaults in the form, click Apply.</p> <p></p> </li> <li> <p>Review the returned information.</p> <p>The provided output shows information the early-tenure SysProg needs to prepare for an IPL on their z/OS LPAR. For example, the date and time the system was last IPL\u2019ed, the z/OS release level, the IPL volume, the IPL LOAD PARM used during the IPL, and other details.</p> <p>If you loaded other pre-packaged skills, test them now.</p> <p></p> </li> </ol>"},{"location":"usecases/ipl/ipl/#connect-the-app-to-your-assistant","title":"Connect the app to your assistant","text":"<p>Before configuring the z/OS IPL Information skill as an assistant action, the app containing the skill must first be connected to the assistant.</p> <ol> <li> <p>Open Skill sets in watsonx orchestrate.</p> <p></p> </li> <li> <p>Click the Skill sets drop-down list and select the Draft of your assistant.</p> <p></p> </li> <li> <p>Click Connections.</p> <p></p> </li> <li> <p>Enter your skill app name (z/OS operations) in the search bar.</p> <p></p> </li> <li> <p>Click the ellipses icon (~) for the z/OS operations app and then click Connect app.</p> <p></p> </li> <li> <p>In the dialog, click Connect app.</p> <p></p> </li> <li> <p>Enter (a) IBMUSER in the username field, (b) your WaaS password in the password field, and then (c) click Connect app.</p> <p></p> </li> </ol>"},{"location":"usecases/ipl/ipl/#create-an-action-for-your-assistant","title":"Create an action for your assistant","text":"<p>Next, create a skill-based action that uses the z/OS IPL Information. Recall, with the z/OS Gather Facts skill flow that was created earlier, adding the skill as a skill-based action allows the skill to run based on user prompts to the assistant.</p> <p>Skill-based actions also serve another purpose. After creating the skill-based action, you can then call that action from a custom-built action. This is accomplished through subactions. For this use case, create an action that triggers the z/OS IPL Information skill on z/OS to display the LPARs IPL information. That action is integrated into another custom-built action (as a subaction) to provide a customized user experience.</p> <ol> <li> <p>Open AI assistant builder in watsonx Orchestrate.</p> <p></p> </li> <li> <p>Select Actions.</p> <p></p> </li> <li> <p>Click New action +.</p> <p></p> </li> <li> <p>Click Skill-based action.</p> <p></p> </li> <li> <p>Click z/OS IPL Information and then click Next.</p> <p></p> </li> <li> <p>Enter a prompt like Display IPL information that starts the skill and then click Save.</p> <p>Prompt:  </p><pre><code>Display IPL information\n</code></pre> <p></p> </li> <li> <p>Click the Save icon ().</p> <p></p> </li> <li> <p>Click Preview.</p> <p></p> <p>Wait for the Your changes are being added. message to disappear before proceeding.</p> </li> <li> <p>Enter the prompt (Display IPL information) to test the skill.</p> <p></p> </li> <li> <p>Using the defaults in the form, click Apply.</p> <p></p> </li> <li> <p>Verify the results.</p> <p></p> </li> <li> <p>Click the delete icon () to remove the example phrase (Display IPL information) from the skill.</p> <p>Next, you will add this skill-based action as a subaction to a custom-build action. To have the custom-built action started rather than the skill-based action, the existing example phrases need to be removed.</p> <p></p> </li> <li> <p>Verify (a) all example phrases are deleted, (b) click the Save icon (), and then (c) click x to close the action.</p> <p></p> </li> </ol>"},{"location":"usecases/ipl/ipl/#create-a-custom-built-action","title":"Create a custom-built action","text":"<p>Custom-built actions allow you to define each step of a conversation with your assistant. You can define steps with or without conditions to control the user responses. You can include your skill-based actions as sub-actions. You can pass generated values between the subactions.</p> <p>Recall the use case of an early-tenure SysProg who is preparing for an upcoming IPL on one of their LPARs. After going through documentation, the SysProg found that there is information that is needed about their LPAR before they can begin the IPL process. To gather that information, the SysProg might ask the assistant \u201cHow do you retrieve the information needed to IPL a z/OS LPAR? Provide a detailed response\u201d. A response the assistant might return is shown in the following image.</p> <p></p> <p>A custom-built action can help the SysProg to take the next steps that are required by adding next-step action suggestions and start skills to gather the needed information.</p> <ol> <li> <p>Click New action +.</p> <p></p> </li> <li> <p>Click Custom-built action.</p> <p></p> </li> <li> <p>Enter an example phrase (Retrieve IPL information) to prompt the assistant to start the custom-built action and click Save.</p> <p>Prompt: </p><pre><code>Retrieve IPL information\n</code></pre> <p></p> </li> <li> <p>Review the form to create a custom-built action.</p> <p>A custom-built action can consist of multiple steps with each step that is taken with or without conditions. Each step specifies the assistant's response and the next step to start.</p> <p>For client demonstrations and pilots...</p> <p>For client demonstrations and pilots, it is possible to add a custom search query such that when conversational search is executed in the 1st step, the query being used is hard-coded and isn\u2019t necessarily what the end-user inputted. This can be done by clicking on the Edit settings option under Search for the answer and specifying a custom search query that specifies the exact query to be used.</p> </li> <li> <p>Click the And then drop-down list and select Search for the answer.</p> <p></p> </li> <li> <p>Click Edit settings.</p> <p></p> </li> <li> <p>Enter a Custom search query and click Apply.</p> <p>Custom search query: </p><pre><code>How do you retrieve the information needed to IPL a z/OS LPAR? Provide a detailed response\n</code></pre> <p></p> </li> <li> <p>Click Next step +.</p> <p>The new custom-built action only responds with a description of how to retrieve the IPL information. Now, infuse automation into the conversation and ask the user if they want to perform the action.</p> <p></p> </li> <li> <p>In the Assistant says field, enter a response asking if the user wants to display the IPL information.</p> <p>Assistant says: </p><pre><code>Would you like to display your LPARs IPL information?\n</code></pre> <p></p> </li> <li> <p>Click the Define customer response drop-down and select Confirmation.</p> <p>Now, after providing a conversational search-based response to the original question, the assistant asks the user if they want to display the IPL information and prompts the user to select Yes or No.</p> <p></p> </li> <li> <p>Click Next step +.</p> <p></p> </li> <li> <p>Click the Is taken drop-down and select with conditions.</p> <p></p> </li> <li> <p>Review the Conditions.</p> <p>Notice that the default condition is based on Step 2 and the user clicking Yes when prompted.</p> <p></p> </li> <li> <p>Enter Retrieving your system's IPL information... in the Assistant says field.</p> <p>Assistant says:  </p><pre><code>Retrieving your system's IPL information...\n</code></pre> <p></p> </li> <li> <p>Click the And then drop-down and select Go to a subaction.</p> <p></p> </li> <li> <p>Click (a) the Go to drop-down, (b) select your skill-based action (z/OS IPL Information), and then (c) click Apply.</p> <p></p> </li> <li> <p>Click Save () and then click x.</p> <p></p> </li> </ol>"},{"location":"usecases/ipl/ipl/#test-the-custom-built-action","title":"Test the custom-built action","text":"<p>You can now practice demonstrating the flow of this use case. Recall the steps that were taken and the scenario of the early-tenure SysProg being tasked with preparing for an upcoming IPL.</p> <ol> <li> <p>Click Preview.</p> <p></p> </li> <li> <p>Enter How do you retrieve the information needed to IPL a z/OS LPAR? in the assistant prompt.</p> <p>Prompt:  </p><pre><code>How do you retrieve the information needed to IPL a z/OS LPAR?\n</code></pre> <p>Use the Change layout option to open a full page view of the assistant.</p> <p></p> </li> <li> <p>Review the response.</p> <p>By using the conversational search capability of watsonx Assistant for Z, grounded on Z-domain knowledge in the Z RAG, the user is able to quickly find an answer to their question. The assistant returns a response that shows the exact operator command they might use, and the types of details it provides which is relevant for preparing for an upcoming IPL. For example, the system\u2019s release level, the LOAD LIB information used for the IPL, the IODF device, the IPL device, and other system information.</p> <p>You are also able to improve their productivity by infusing automations into the natural conversation that will provide them exactly the information they need to accomplish their task.</p> <p></p> </li> <li> <p>Click Yes.</p> <p></p> </li> <li> <p>Using the defaults in the form, click Apply.</p> <p></p> </li> <li> <p>Review the response to the custom-built action.</p> <p>The output provides relevant pieces of information the early-tenure SysProg needs to prepare for an IPL on their z/OS LPAR. For example, when the system was last IPLed, the z/OS release they have running (2.5), the IPL volume (D25VS1), the IPL LOAD PARM (LOADK2) used during the last IPL, and other relevant details.</p> <p></p> </li> </ol> <p>The ability to infuse skills and automations into the conversation allows the user to issue the operator command on their system directly within the assistant itself. The assistant provides a single interface for retrieving details that are required for the IPL process to go smoothly and increases the user's efficiency.</p>"},{"location":"usecases/ipl/iplPH/","title":"COMING SOON!","text":""},{"location":"usecases/ipl/iplPH/#coming-soon","title":"COMING SOON!","text":""},{"location":"usecases/racf/racf/","title":"Use case: RACF administration support","text":""},{"location":"usecases/racf/racf/#use-case-racf-administration-support","title":"Use case: RACF administration support","text":"<p>This is a challenge use case.</p> <p>In this use case, step-by-step directions are not provided. Use the knowledge gained from previous sections of the lab guide to complete updates to the assistant to meet the use case requirements. Several help tips are provided and a sample demonstrate flow is included.</p> <p>This use case explores the ability of watsonx Assistant for Z to provide self-service support for activities related to Resource Access Control Facility RACF (RACF) Administration support. The client mentioned that their RACF Administrators are often inundated with requests to help reset user's Time Sharing Option (TSO) passwords. Also, requests to grant users certain authorizations to RACF profiles required for the users to complete their jobs are numerous.</p> <p>Creating a custom-built action for the assistant that provides self-service options to users requesting RACF assistance. Depending on the assistance being requested, the assistant will trigger automations that complete tasks on their behalf without intervention from the RACF Administrator.</p> <p>The actions and configuration that follow are meant purely for demonstration purposes.</p> <p>The actions and configuration that follow are meant purely for demonstration purposes to show the art of the possible with watsonx Assistant for Z. There are security considerations to keep in mind when configuring assistants for this purpose, including user authentication and the ability to authorize users to execute certain automations. However, by following the steps in this section, you will show the level of customization that is possible with watsonx Assistant for Z and different an assistant can improve productivity.</p> <ol> <li> <p>Create an app with the required TSO skills.</p> <p>Use Skills studio to create the app.</p> <p>App name: </p><pre><code>TSO Command\n</code></pre> <p>Skills to include:  z/OS TSO COmmand(s) Retrieve job output (utility skill)</p> <p></p> </li> <li> <p>Create a connection for the app.</p> <p>Use Skills catalog to create the app.</p> <p></p> </li> <li> <p>Create a skill flow to get the output of the TSO Command.</p> <p>Use Skills studio to create the skill flow.</p> <p>The skill flow should run the TSO Command skill and then the Retrieve job output utility skill. The output from the TSO Command should be mapped to the input of the Retrieve job output utility skill. Hide both the input and output forms for the TSO Command skill.</p> <p>Skill flow name: </p><pre><code>TSO COMMAND\n</code></pre> <p></p> </li> <li> <p>Add the skills to the draft version of the assistant.</p> <p>Use Skill sets to add the skills to the assistant.</p> <p></p> </li> <li> <p>Create a skill-based action that uses the skill flow.</p> <p>Create an action that triggers the skill flow to execute TSO commands on z/OS and then display the output of those commands. </p> <p>Use AI Assistant builder to create the action.</p> <p>Do not add example phrases to the skill-based action.</p> <p></p> </li> <li> <p>Create a custom-built action for RACF administration support.</p> <p>Use AI Assistant builder to create the action.</p> <p>Phrase to start the interaction: </p><pre><code>RACF assistance\n</code></pre> <p>The steps for the custom-built action follow:</p> <p>Step 1. Without conditions, prompt the user for their RACF User ID as free text.</p> <p>Assistant says: </p><pre><code>What is your RACF User ID?\n</code></pre> <p>Step 2. Without conditions, use provided user ID and display a message that the assistant is checking the current privileges.</p> <p>Assistant says: </p><pre><code>Checking user privileges for \n</code></pre> <p>Include in the Assistant says the provided user ID by including the function 1. What is your RACF User ID. </p> <p>Enter <code>$</code> after the Assistant says phrase, then click Action step variables, and then click 1. What is your RACF User ID.</p> <p>Add an And then option to run the TSO Command as a subaction. </p> <p>Edit the passed values for the subaction and add a new passed value for 1. extra_vars.zos_tso_command. The To of the variable will be an Expression and include the string <code>\\</code>LISTUSER ` + <code>and the **Action step variable**: *1. What is your RACF User ID*. When</code>LISTUSER <code>in the **Expression** field, enter</code>$` to be prompted with the available </p> </li> </ol>"},{"location":"usecases/racf/racfPH/","title":"Challenge: RACF administration support","text":""},{"location":"usecases/racf/racfPH/#coming-soon","title":"COMING SOON!","text":""}]}